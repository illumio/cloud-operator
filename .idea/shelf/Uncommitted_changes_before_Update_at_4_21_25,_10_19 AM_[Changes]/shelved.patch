Index: internal/controller/resource_manager_test.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/internal/controller/resource_manager_test.go b/internal/controller/resource_manager_test.go
--- a/internal/controller/resource_manager_test.go	(revision 8c3ec794d476f91d7daa22466b2022c299d46eb7)
+++ b/internal/controller/resource_manager_test.go	(date 1745199326540)
@@ -1,1 +1,490 @@
 package controller
+
+import (
+	"context"
+	"testing"
+
+	pb "github.com/illumio/cloud-operator/api/illumio/cloud/k8sclustersync/v1"
+	"github.com/stretchr/testify/assert"
+	"github.com/stretchr/testify/mock"
+	"github.com/stretchr/testify/suite"
+	"go.uber.org/zap"
+	"golang.org/x/time/rate"
+	"google.golang.org/grpc"
+	"google.golang.org/grpc/metadata"
+	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
+	"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
+	"k8s.io/apimachinery/pkg/runtime/schema"
+	"k8s.io/apimachinery/pkg/types"
+	"k8s.io/apimachinery/pkg/watch"
+	"k8s.io/client-go/dynamic"
+	"k8s.io/client-go/kubernetes"
+)
+
+// MockDynamicInterface mocks the dynamic.Interface
+type MockDynamicInterface struct {
+	mock.Mock
+}
+
+func (m *MockDynamicInterface) Resource(resource schema.GroupVersionResource) dynamic.NamespaceableResourceInterface {
+	args := m.Called(resource)
+	return args.Get(0).(dynamic.NamespaceableResourceInterface)
+}
+
+// MockNamespaceableResourceInterface mocks the dynamic.NamespaceableResourceInterface
+type MockNamespaceableResourceInterface struct {
+	mock.Mock
+}
+
+func (m *MockNamespaceableResourceInterface) Namespace(namespace string) dynamic.ResourceInterface {
+	args := m.Called(namespace)
+	return args.Get(0).(dynamic.ResourceInterface)
+}
+
+func (m *MockNamespaceableResourceInterface) List(ctx context.Context, opts metav1.ListOptions) (*unstructured.UnstructuredList, error) {
+	args := m.Called(ctx, opts)
+	if list, ok := args.Get(0).(*unstructured.UnstructuredList); ok {
+		return list, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockNamespaceableResourceInterface) Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error) {
+	args := m.Called(ctx, opts)
+	if watcher, ok := args.Get(0).(watch.Interface); ok {
+		return watcher, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockNamespaceableResourceInterface) Apply(ctx context.Context, name string, obj *unstructured.Unstructured, opts metav1.ApplyOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, name, obj, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockNamespaceableResourceInterface) ApplyStatus(ctx context.Context, name string, obj *unstructured.Unstructured, opts metav1.ApplyOptions) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, name, obj, opts)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockNamespaceableResourceInterface) Create(ctx context.Context, obj *unstructured.Unstructured, opts metav1.CreateOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, obj, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockNamespaceableResourceInterface) Update(ctx context.Context, obj *unstructured.Unstructured, opts metav1.UpdateOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, obj, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockNamespaceableResourceInterface) UpdateStatus(ctx context.Context, obj *unstructured.Unstructured, opts metav1.UpdateOptions) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, obj, opts)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockNamespaceableResourceInterface) Delete(ctx context.Context, name string, opts metav1.DeleteOptions, subresources ...string) error {
+	args := m.Called(ctx, name, opts, subresources)
+	return args.Error(0)
+}
+
+func (m *MockNamespaceableResourceInterface) DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error {
+	args := m.Called(ctx, opts, listOpts)
+	return args.Error(0)
+}
+
+func (m *MockNamespaceableResourceInterface) Get(ctx context.Context, name string, opts metav1.GetOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, name, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockNamespaceableResourceInterface) Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, name, pt, data, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+// MockResourceInterface mocks the dynamic.ResourceInterface
+type MockResourceInterface struct {
+	mock.Mock
+}
+
+func (m *MockResourceInterface) List(ctx context.Context, opts metav1.ListOptions) (*unstructured.UnstructuredList, error) {
+	args := m.Called(ctx, opts)
+	if list, ok := args.Get(0).(*unstructured.UnstructuredList); ok {
+		return list, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockResourceInterface) Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error) {
+	args := m.Called(ctx, opts)
+	if watcher, ok := args.Get(0).(watch.Interface); ok {
+		return watcher, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockResourceInterface) Apply(ctx context.Context, name string, obj *unstructured.Unstructured, opts metav1.ApplyOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, name, obj, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockResourceInterface) ApplyStatus(ctx context.Context, name string, obj *unstructured.Unstructured, opts metav1.ApplyOptions) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, name, obj, opts)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockResourceInterface) Create(ctx context.Context, obj *unstructured.Unstructured, opts metav1.CreateOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, obj, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockResourceInterface) Update(ctx context.Context, obj *unstructured.Unstructured, opts metav1.UpdateOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, obj, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockResourceInterface) UpdateStatus(ctx context.Context, obj *unstructured.Unstructured, opts metav1.UpdateOptions) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, obj, opts)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockResourceInterface) Delete(ctx context.Context, name string, opts metav1.DeleteOptions, subresources ...string) error {
+	args := m.Called(ctx, name, opts, subresources)
+	return args.Error(0)
+}
+
+func (m *MockResourceInterface) DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error {
+	args := m.Called(ctx, opts, listOpts)
+	return args.Error(0)
+}
+
+func (m *MockResourceInterface) Get(ctx context.Context, name string, opts metav1.GetOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, name, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+func (m *MockResourceInterface) Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (*unstructured.Unstructured, error) {
+	args := m.Called(ctx, name, pt, data, opts, subresources)
+	if result, ok := args.Get(0).(*unstructured.Unstructured); ok {
+		return result, args.Error(1)
+	}
+	return nil, args.Error(1)
+}
+
+// MockWatchInterface mocks the watch.Interface
+type MockWatchInterface struct {
+	mock.Mock
+}
+
+func (m *MockWatchInterface) Stop() {
+	m.Called()
+}
+
+func (m *MockWatchInterface) ResultChan() <-chan watch.Event {
+	args := m.Called()
+	return args.Get(0).(<-chan watch.Event)
+}
+
+// MockKubernetesResourceStream mocks the resource stream interface
+type mockKubernetesResourceStream struct {
+	grpc.ClientStream
+	events []*pb.SendKubernetesResourcesRequest
+}
+
+func (m *mockKubernetesResourceStream) Send(req *pb.SendKubernetesResourcesRequest) error {
+	m.events = append(m.events, req)
+	return nil
+}
+
+func (m *mockKubernetesResourceStream) Recv() (*pb.SendKubernetesResourcesResponse, error) {
+	return &pb.SendKubernetesResourcesResponse{}, nil
+}
+
+func (m *mockKubernetesResourceStream) CloseSend() error {
+	return nil
+}
+
+func (m *mockKubernetesResourceStream) Context() context.Context {
+	return context.Background()
+}
+
+func (m *mockKubernetesResourceStream) Header() (metadata.MD, error) {
+	return nil, nil
+}
+
+func (m *mockKubernetesResourceStream) Trailer() metadata.MD {
+	return nil
+}
+
+func (m *mockKubernetesResourceStream) CloseAndRecv() (*pb.SendKubernetesResourcesResponse, error) {
+	return &pb.SendKubernetesResourcesResponse{}, nil
+}
+
+// ResourceManagerTestSuite is a test suite for ResourceManager
+type ResourceManagerTestSuite struct {
+	suite.Suite
+	resourceManager *ResourceManager
+	mockDynamic     *MockDynamicInterface
+	mockResource    *MockResourceInterface
+	mockClientset   *kubernetes.Clientset
+	logger          *zap.Logger
+}
+
+func TestResourceManagerTestSuite(t *testing.T) {
+	suite.Run(t, new(ResourceManagerTestSuite))
+}
+
+func (suite *ResourceManagerTestSuite) SetupTest() {
+	suite.mockDynamic = new(MockDynamicInterface)
+	suite.mockResource = new(MockResourceInterface)
+	suite.mockClientset = &kubernetes.Clientset{}
+	suite.logger = zap.NewNop()
+
+	suite.resourceManager = &ResourceManager{
+		clientset:     suite.mockClientset,
+		logger:        suite.logger,
+		dynamicClient: suite.mockDynamic,
+		streamManager: &streamManager{
+			bufferedGrpcSyncer: &BufferedGrpcWriteSyncer{},
+			streamClient: &streamClient{
+				resourceStream: &mockKubernetesResourceStream{},
+			},
+		},
+	}
+}
+
+func (suite *ResourceManagerTestSuite) TestFetchResources() {
+	tests := []struct {
+		name          string
+		resource      schema.GroupVersionResource
+		namespace     string
+		mockList      *unstructured.UnstructuredList
+		mockError     error
+		expectedError bool
+	}{
+		{
+			name:      "successful fetch",
+			resource:  schema.GroupVersionResource{Group: "", Version: "v1", Resource: "pods"},
+			namespace: "default",
+			mockList: &unstructured.UnstructuredList{
+				Items: []unstructured.Unstructured{
+					{
+						Object: map[string]interface{}{
+							"metadata": map[string]interface{}{
+								"name": "test-pod",
+							},
+						},
+					},
+				},
+			},
+			mockError:     nil,
+			expectedError: false,
+		},
+		{
+			name:          "fetch error",
+			resource:      schema.GroupVersionResource{Group: "", Version: "v1", Resource: "pods"},
+			namespace:     "default",
+			mockList:      nil,
+			mockError:     assert.AnError,
+			expectedError: true,
+		},
+	}
+
+	for _, tt := range tests {
+		suite.Run(tt.name, func() {
+			// Reset mock expectations
+			suite.mockDynamic.ExpectedCalls = nil
+			suite.mockResource.ExpectedCalls = nil
+
+			mockNamespaceable := new(MockNamespaceableResourceInterface)
+			suite.mockDynamic.On("Resource", tt.resource).Return(mockNamespaceable)
+			mockNamespaceable.On("Namespace", tt.namespace).Return(suite.mockResource)
+			suite.mockResource.On("List", context.Background(), metav1.ListOptions{}).Return(tt.mockList, tt.mockError)
+
+			result, err := suite.resourceManager.FetchResources(context.Background(), tt.resource, tt.namespace)
+
+			if tt.expectedError {
+				assert.Error(suite.T(), err)
+				assert.Nil(suite.T(), result)
+			} else {
+				assert.NoError(suite.T(), err)
+				assert.Equal(suite.T(), tt.mockList, result)
+			}
+
+			// Verify all expected calls were made
+			suite.mockDynamic.AssertExpectations(suite.T())
+			suite.mockResource.AssertExpectations(suite.T())
+		})
+	}
+}
+
+func (suite *ResourceManagerTestSuite) TestExtractObjectMetas() {
+	tests := []struct {
+		name          string
+		resources     *unstructured.UnstructuredList
+		expectedMetas []metav1.ObjectMeta
+		expectedError bool
+	}{
+		{
+			name: "successful extraction",
+			resources: &unstructured.UnstructuredList{
+				Items: []unstructured.Unstructured{
+					{
+						Object: map[string]interface{}{
+							"metadata": map[string]interface{}{
+								"name":      "test-pod",
+								"namespace": "default",
+							},
+						},
+					},
+				},
+			},
+			expectedMetas: []metav1.ObjectMeta{
+				{
+					Name:      "test-pod",
+					Namespace: "default",
+				},
+			},
+			expectedError: false,
+		},
+		{
+			name: "empty list",
+			resources: &unstructured.UnstructuredList{
+				Items: []unstructured.Unstructured{},
+			},
+			expectedMetas: []metav1.ObjectMeta{},
+			expectedError: false,
+		},
+	}
+
+	for _, tt := range tests {
+		suite.Run(tt.name, func() {
+			result, err := suite.resourceManager.ExtractObjectMetas(tt.resources)
+
+			if tt.expectedError {
+				assert.Error(suite.T(), err)
+				assert.Nil(suite.T(), result)
+			} else {
+				assert.NoError(suite.T(), err)
+				assert.Equal(suite.T(), tt.expectedMetas, result)
+			}
+		})
+	}
+}
+
+func (suite *ResourceManagerTestSuite) TestDynamicListResources() {
+	// Create a mock resource
+	mockResource := &unstructured.Unstructured{
+		Object: map[string]interface{}{
+			"apiVersion": "v1",
+			"kind":       "Pod",
+			"metadata": map[string]interface{}{
+				"name":            "test-pod",
+				"namespace":       "default",
+				"resourceVersion": "1",
+			},
+		},
+	}
+
+	// Create a mock list response
+	mockList := &unstructured.UnstructuredList{
+		Items: []unstructured.Unstructured{*mockResource},
+		Object: map[string]interface{}{
+			"metadata": map[string]interface{}{
+				"resourceVersion": "1",
+			},
+		},
+	}
+
+	// Set up the mock hierarchy
+	mockNamespaceable := new(MockNamespaceableResourceInterface)
+	suite.mockDynamic.On("Resource", mock.Anything).Return(mockNamespaceable)
+	mockNamespaceable.On("Namespace", mock.Anything).Return(suite.mockResource)
+	suite.mockResource.On("List", mock.Anything, mock.Anything).Return(mockList, nil)
+
+	// Call DynamicListResources
+	version, err := suite.resourceManager.DynamicListResources(context.Background(), suite.logger, "pods", "")
+
+	// Verify the results
+	assert.NoError(suite.T(), err)
+	assert.Equal(suite.T(), "1", version)
+
+	// Verify all expected calls were made
+	suite.mockDynamic.AssertExpectations(suite.T())
+	suite.mockResource.AssertExpectations(suite.T())
+}
+
+func (suite *ResourceManagerTestSuite) TestRateLimiting() {
+	tests := []struct {
+		name          string
+		ctx           context.Context
+		expectedError bool
+	}{
+		{
+			name:          "successful rate limit",
+			ctx:           context.Background(),
+			expectedError: false,
+		},
+		{
+			name: "context cancelled",
+			ctx: func() context.Context {
+				ctx, cancel := context.WithCancel(context.Background())
+				cancel()
+				return ctx
+			}(),
+			expectedError: true,
+		},
+	}
+
+	for _, tt := range tests {
+		suite.Run(tt.name, func() {
+			limiter := rate.NewLimiter(1, 5)
+			err := limiter.Wait(tt.ctx)
+
+			if tt.expectedError {
+				assert.Error(suite.T(), err)
+			} else {
+				assert.NoError(suite.T(), err)
+			}
+		})
+	}
+}
Index: api/illumio/cloud/k8sclustersync/v1/k8s_info_grpc.pb.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Copyright 2024 Illumio, Inc. All Rights Reserved.\n\n// Code generated by protoc-gen-go-grpc. DO NOT EDIT.\n// versions:\n// - protoc-gen-go-grpc v1.3.0\n// - protoc             (unknown)\n// source: illumio/cloud/k8sclustersync/v1/k8s_info.proto\n\npackage k8sclustersyncv1\n\nimport (\n\tcontext \"context\"\n\tgrpc \"google.golang.org/grpc\"\n\tcodes \"google.golang.org/grpc/codes\"\n\tstatus \"google.golang.org/grpc/status\"\n)\n\n// This is a compile-time assertion to ensure that this generated file\n// is compatible with the grpc package it is being compiled against.\n// Requires gRPC-Go v1.32.0 or later.\nconst _ = grpc.SupportPackageIsVersion7\n\nconst (\n\tKubernetesInfoService_SendKubernetesResources_FullMethodName    = \"/illumio.cloud.k8sclustersync.v1.KubernetesInfoService/SendKubernetesResources\"\n\tKubernetesInfoService_SendKubernetesNetworkFlows_FullMethodName = \"/illumio.cloud.k8sclustersync.v1.KubernetesInfoService/SendKubernetesNetworkFlows\"\n\tKubernetesInfoService_SendLogs_FullMethodName                   = \"/illumio.cloud.k8sclustersync.v1.KubernetesInfoService/SendLogs\"\n\tKubernetesInfoService_GetConfigurationUpdates_FullMethodName    = \"/illumio.cloud.k8sclustersync.v1.KubernetesInfoService/GetConfigurationUpdates\"\n)\n\n// KubernetesInfoServiceClient is the client API for KubernetesInfoService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype KubernetesInfoServiceClient interface {\n\t// Continuously syncs the inventory of the Kubernetes resources in the cluster into CloudSecure.\n\tSendKubernetesResources(ctx context.Context, opts ...grpc.CallOption) (KubernetesInfoService_SendKubernetesResourcesClient, error)\n\t// Continuously sends network flows exported by the CNI plugin in the cluster to CloudSecure.\n\tSendKubernetesNetworkFlows(ctx context.Context, opts ...grpc.CallOption) (KubernetesInfoService_SendKubernetesNetworkFlowsClient, error)\n\t// Continuously syncs logs from operator and cluster.\n\tSendLogs(ctx context.Context, opts ...grpc.CallOption) (KubernetesInfoService_SendLogsClient, error)\n\t// Continuously receives configuration updates from CloudSecure.\n\tGetConfigurationUpdates(ctx context.Context, opts ...grpc.CallOption) (KubernetesInfoService_GetConfigurationUpdatesClient, error)\n}\n\ntype kubernetesInfoServiceClient struct {\n\tcc grpc.ClientConnInterface\n}\n\nfunc NewKubernetesInfoServiceClient(cc grpc.ClientConnInterface) KubernetesInfoServiceClient {\n\treturn &kubernetesInfoServiceClient{cc}\n}\n\nfunc (c *kubernetesInfoServiceClient) SendKubernetesResources(ctx context.Context, opts ...grpc.CallOption) (KubernetesInfoService_SendKubernetesResourcesClient, error) {\n\tstream, err := c.cc.NewStream(ctx, &KubernetesInfoService_ServiceDesc.Streams[0], KubernetesInfoService_SendKubernetesResources_FullMethodName, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tx := &kubernetesInfoServiceSendKubernetesResourcesClient{stream}\n\treturn x, nil\n}\n\ntype KubernetesInfoService_SendKubernetesResourcesClient interface {\n\tSend(*SendKubernetesResourcesRequest) error\n\tRecv() (*SendKubernetesResourcesResponse, error)\n\tgrpc.ClientStream\n}\n\ntype kubernetesInfoServiceSendKubernetesResourcesClient struct {\n\tgrpc.ClientStream\n}\n\nfunc (x *kubernetesInfoServiceSendKubernetesResourcesClient) Send(m *SendKubernetesResourcesRequest) error {\n\treturn x.ClientStream.SendMsg(m)\n}\n\nfunc (x *kubernetesInfoServiceSendKubernetesResourcesClient) Recv() (*SendKubernetesResourcesResponse, error) {\n\tm := new(SendKubernetesResourcesResponse)\n\tif err := x.ClientStream.RecvMsg(m); err != nil {\n\t\treturn nil, err\n\t}\n\treturn m, nil\n}\n\nfunc (c *kubernetesInfoServiceClient) SendKubernetesNetworkFlows(ctx context.Context, opts ...grpc.CallOption) (KubernetesInfoService_SendKubernetesNetworkFlowsClient, error) {\n\tstream, err := c.cc.NewStream(ctx, &KubernetesInfoService_ServiceDesc.Streams[1], KubernetesInfoService_SendKubernetesNetworkFlows_FullMethodName, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tx := &kubernetesInfoServiceSendKubernetesNetworkFlowsClient{stream}\n\treturn x, nil\n}\n\ntype KubernetesInfoService_SendKubernetesNetworkFlowsClient interface {\n\tSend(*SendKubernetesNetworkFlowsRequest) error\n\tRecv() (*SendKubernetesNetworkFlowsResponse, error)\n\tgrpc.ClientStream\n}\n\ntype kubernetesInfoServiceSendKubernetesNetworkFlowsClient struct {\n\tgrpc.ClientStream\n}\n\nfunc (x *kubernetesInfoServiceSendKubernetesNetworkFlowsClient) Send(m *SendKubernetesNetworkFlowsRequest) error {\n\treturn x.ClientStream.SendMsg(m)\n}\n\nfunc (x *kubernetesInfoServiceSendKubernetesNetworkFlowsClient) Recv() (*SendKubernetesNetworkFlowsResponse, error) {\n\tm := new(SendKubernetesNetworkFlowsResponse)\n\tif err := x.ClientStream.RecvMsg(m); err != nil {\n\t\treturn nil, err\n\t}\n\treturn m, nil\n}\n\nfunc (c *kubernetesInfoServiceClient) SendLogs(ctx context.Context, opts ...grpc.CallOption) (KubernetesInfoService_SendLogsClient, error) {\n\tstream, err := c.cc.NewStream(ctx, &KubernetesInfoService_ServiceDesc.Streams[2], KubernetesInfoService_SendLogs_FullMethodName, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tx := &kubernetesInfoServiceSendLogsClient{stream}\n\treturn x, nil\n}\n\ntype KubernetesInfoService_SendLogsClient interface {\n\tSend(*SendLogsRequest) error\n\tRecv() (*SendLogsResponse, error)\n\tgrpc.ClientStream\n}\n\ntype kubernetesInfoServiceSendLogsClient struct {\n\tgrpc.ClientStream\n}\n\nfunc (x *kubernetesInfoServiceSendLogsClient) Send(m *SendLogsRequest) error {\n\treturn x.ClientStream.SendMsg(m)\n}\n\nfunc (x *kubernetesInfoServiceSendLogsClient) Recv() (*SendLogsResponse, error) {\n\tm := new(SendLogsResponse)\n\tif err := x.ClientStream.RecvMsg(m); err != nil {\n\t\treturn nil, err\n\t}\n\treturn m, nil\n}\n\nfunc (c *kubernetesInfoServiceClient) GetConfigurationUpdates(ctx context.Context, opts ...grpc.CallOption) (KubernetesInfoService_GetConfigurationUpdatesClient, error) {\n\tstream, err := c.cc.NewStream(ctx, &KubernetesInfoService_ServiceDesc.Streams[3], KubernetesInfoService_GetConfigurationUpdates_FullMethodName, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tx := &kubernetesInfoServiceGetConfigurationUpdatesClient{stream}\n\treturn x, nil\n}\n\ntype KubernetesInfoService_GetConfigurationUpdatesClient interface {\n\tSend(*GetConfigurationUpdatesRequest) error\n\tRecv() (*GetConfigurationUpdatesResponse, error)\n\tgrpc.ClientStream\n}\n\ntype kubernetesInfoServiceGetConfigurationUpdatesClient struct {\n\tgrpc.ClientStream\n}\n\nfunc (x *kubernetesInfoServiceGetConfigurationUpdatesClient) Send(m *GetConfigurationUpdatesRequest) error {\n\treturn x.ClientStream.SendMsg(m)\n}\n\nfunc (x *kubernetesInfoServiceGetConfigurationUpdatesClient) Recv() (*GetConfigurationUpdatesResponse, error) {\n\tm := new(GetConfigurationUpdatesResponse)\n\tif err := x.ClientStream.RecvMsg(m); err != nil {\n\t\treturn nil, err\n\t}\n\treturn m, nil\n}\n\n// KubernetesInfoServiceServer is the server API for KubernetesInfoService service.\n// All implementations must embed UnimplementedKubernetesInfoServiceServer\n// for forward compatibility\ntype KubernetesInfoServiceServer interface {\n\t// Continuously syncs the inventory of the Kubernetes resources in the cluster into CloudSecure.\n\tSendKubernetesResources(KubernetesInfoService_SendKubernetesResourcesServer) error\n\t// Continuously sends network flows exported by the CNI plugin in the cluster to CloudSecure.\n\tSendKubernetesNetworkFlows(KubernetesInfoService_SendKubernetesNetworkFlowsServer) error\n\t// Continuously syncs logs from operator and cluster.\n\tSendLogs(KubernetesInfoService_SendLogsServer) error\n\t// Continuously receives configuration updates from CloudSecure.\n\tGetConfigurationUpdates(KubernetesInfoService_GetConfigurationUpdatesServer) error\n\tmustEmbedUnimplementedKubernetesInfoServiceServer()\n}\n\n// UnimplementedKubernetesInfoServiceServer must be embedded to have forward compatible implementations.\ntype UnimplementedKubernetesInfoServiceServer struct {\n}\n\nfunc (UnimplementedKubernetesInfoServiceServer) SendKubernetesResources(KubernetesInfoService_SendKubernetesResourcesServer) error {\n\treturn status.Errorf(codes.Unimplemented, \"method SendKubernetesResources not implemented\")\n}\nfunc (UnimplementedKubernetesInfoServiceServer) SendKubernetesNetworkFlows(KubernetesInfoService_SendKubernetesNetworkFlowsServer) error {\n\treturn status.Errorf(codes.Unimplemented, \"method SendKubernetesNetworkFlows not implemented\")\n}\nfunc (UnimplementedKubernetesInfoServiceServer) SendLogs(KubernetesInfoService_SendLogsServer) error {\n\treturn status.Errorf(codes.Unimplemented, \"method SendLogs not implemented\")\n}\nfunc (UnimplementedKubernetesInfoServiceServer) GetConfigurationUpdates(KubernetesInfoService_GetConfigurationUpdatesServer) error {\n\treturn status.Errorf(codes.Unimplemented, \"method GetConfigurationUpdates not implemented\")\n}\nfunc (UnimplementedKubernetesInfoServiceServer) mustEmbedUnimplementedKubernetesInfoServiceServer() {}\n\n// UnsafeKubernetesInfoServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to KubernetesInfoServiceServer will\n// result in compilation errors.\ntype UnsafeKubernetesInfoServiceServer interface {\n\tmustEmbedUnimplementedKubernetesInfoServiceServer()\n}\n\nfunc RegisterKubernetesInfoServiceServer(s grpc.ServiceRegistrar, srv KubernetesInfoServiceServer) {\n\ts.RegisterService(&KubernetesInfoService_ServiceDesc, srv)\n}\n\nfunc _KubernetesInfoService_SendKubernetesResources_Handler(srv interface{}, stream grpc.ServerStream) error {\n\treturn srv.(KubernetesInfoServiceServer).SendKubernetesResources(&kubernetesInfoServiceSendKubernetesResourcesServer{stream})\n}\n\ntype KubernetesInfoService_SendKubernetesResourcesServer interface {\n\tSend(*SendKubernetesResourcesResponse) error\n\tRecv() (*SendKubernetesResourcesRequest, error)\n\tgrpc.ServerStream\n}\n\ntype kubernetesInfoServiceSendKubernetesResourcesServer struct {\n\tgrpc.ServerStream\n}\n\nfunc (x *kubernetesInfoServiceSendKubernetesResourcesServer) Send(m *SendKubernetesResourcesResponse) error {\n\treturn x.ServerStream.SendMsg(m)\n}\n\nfunc (x *kubernetesInfoServiceSendKubernetesResourcesServer) Recv() (*SendKubernetesResourcesRequest, error) {\n\tm := new(SendKubernetesResourcesRequest)\n\tif err := x.ServerStream.RecvMsg(m); err != nil {\n\t\treturn nil, err\n\t}\n\treturn m, nil\n}\n\nfunc _KubernetesInfoService_SendKubernetesNetworkFlows_Handler(srv interface{}, stream grpc.ServerStream) error {\n\treturn srv.(KubernetesInfoServiceServer).SendKubernetesNetworkFlows(&kubernetesInfoServiceSendKubernetesNetworkFlowsServer{stream})\n}\n\ntype KubernetesInfoService_SendKubernetesNetworkFlowsServer interface {\n\tSend(*SendKubernetesNetworkFlowsResponse) error\n\tRecv() (*SendKubernetesNetworkFlowsRequest, error)\n\tgrpc.ServerStream\n}\n\ntype kubernetesInfoServiceSendKubernetesNetworkFlowsServer struct {\n\tgrpc.ServerStream\n}\n\nfunc (x *kubernetesInfoServiceSendKubernetesNetworkFlowsServer) Send(m *SendKubernetesNetworkFlowsResponse) error {\n\treturn x.ServerStream.SendMsg(m)\n}\n\nfunc (x *kubernetesInfoServiceSendKubernetesNetworkFlowsServer) Recv() (*SendKubernetesNetworkFlowsRequest, error) {\n\tm := new(SendKubernetesNetworkFlowsRequest)\n\tif err := x.ServerStream.RecvMsg(m); err != nil {\n\t\treturn nil, err\n\t}\n\treturn m, nil\n}\n\nfunc _KubernetesInfoService_SendLogs_Handler(srv interface{}, stream grpc.ServerStream) error {\n\treturn srv.(KubernetesInfoServiceServer).SendLogs(&kubernetesInfoServiceSendLogsServer{stream})\n}\n\ntype KubernetesInfoService_SendLogsServer interface {\n\tSend(*SendLogsResponse) error\n\tRecv() (*SendLogsRequest, error)\n\tgrpc.ServerStream\n}\n\ntype kubernetesInfoServiceSendLogsServer struct {\n\tgrpc.ServerStream\n}\n\nfunc (x *kubernetesInfoServiceSendLogsServer) Send(m *SendLogsResponse) error {\n\treturn x.ServerStream.SendMsg(m)\n}\n\nfunc (x *kubernetesInfoServiceSendLogsServer) Recv() (*SendLogsRequest, error) {\n\tm := new(SendLogsRequest)\n\tif err := x.ServerStream.RecvMsg(m); err != nil {\n\t\treturn nil, err\n\t}\n\treturn m, nil\n}\n\nfunc _KubernetesInfoService_GetConfigurationUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {\n\treturn srv.(KubernetesInfoServiceServer).GetConfigurationUpdates(&kubernetesInfoServiceGetConfigurationUpdatesServer{stream})\n}\n\ntype KubernetesInfoService_GetConfigurationUpdatesServer interface {\n\tSend(*GetConfigurationUpdatesResponse) error\n\tRecv() (*GetConfigurationUpdatesRequest, error)\n\tgrpc.ServerStream\n}\n\ntype kubernetesInfoServiceGetConfigurationUpdatesServer struct {\n\tgrpc.ServerStream\n}\n\nfunc (x *kubernetesInfoServiceGetConfigurationUpdatesServer) Send(m *GetConfigurationUpdatesResponse) error {\n\treturn x.ServerStream.SendMsg(m)\n}\n\nfunc (x *kubernetesInfoServiceGetConfigurationUpdatesServer) Recv() (*GetConfigurationUpdatesRequest, error) {\n\tm := new(GetConfigurationUpdatesRequest)\n\tif err := x.ServerStream.RecvMsg(m); err != nil {\n\t\treturn nil, err\n\t}\n\treturn m, nil\n}\n\n// KubernetesInfoService_ServiceDesc is the grpc.ServiceDesc for KubernetesInfoService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar KubernetesInfoService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"illumio.cloud.k8sclustersync.v1.KubernetesInfoService\",\n\tHandlerType: (*KubernetesInfoServiceServer)(nil),\n\tMethods:     []grpc.MethodDesc{},\n\tStreams: []grpc.StreamDesc{\n\t\t{\n\t\t\tStreamName:    \"SendKubernetesResources\",\n\t\t\tHandler:       _KubernetesInfoService_SendKubernetesResources_Handler,\n\t\t\tServerStreams: true,\n\t\t\tClientStreams: true,\n\t\t},\n\t\t{\n\t\t\tStreamName:    \"SendKubernetesNetworkFlows\",\n\t\t\tHandler:       _KubernetesInfoService_SendKubernetesNetworkFlows_Handler,\n\t\t\tServerStreams: true,\n\t\t\tClientStreams: true,\n\t\t},\n\t\t{\n\t\t\tStreamName:    \"SendLogs\",\n\t\t\tHandler:       _KubernetesInfoService_SendLogs_Handler,\n\t\t\tServerStreams: true,\n\t\t\tClientStreams: true,\n\t\t},\n\t\t{\n\t\t\tStreamName:    \"GetConfigurationUpdates\",\n\t\t\tHandler:       _KubernetesInfoService_GetConfigurationUpdates_Handler,\n\t\t\tServerStreams: true,\n\t\t\tClientStreams: true,\n\t\t},\n\t},\n\tMetadata: \"illumio/cloud/k8sclustersync/v1/k8s_info.proto\",\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/illumio/cloud/k8sclustersync/v1/k8s_info_grpc.pb.go b/api/illumio/cloud/k8sclustersync/v1/k8s_info_grpc.pb.go
--- a/api/illumio/cloud/k8sclustersync/v1/k8s_info_grpc.pb.go	(revision 8c3ec794d476f91d7daa22466b2022c299d46eb7)
+++ b/api/illumio/cloud/k8sclustersync/v1/k8s_info_grpc.pb.go	(date 1745255525937)
@@ -10,6 +10,7 @@
 
 import (
 	context "context"
+
 	grpc "google.golang.org/grpc"
 	codes "google.golang.org/grpc/codes"
 	status "google.golang.org/grpc/status"
Index: api/illumio/cloud/k8sclustersync/v1/k8s_info.pb.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Copyright 2024 Illumio, Inc. All Rights Reserved.\n\n// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.36.6\n// \tprotoc        (unknown)\n// source: illumio/cloud/k8sclustersync/v1/k8s_info.proto\n\npackage k8sclustersyncv1\n\nimport (\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\ttimestamppb \"google.golang.org/protobuf/types/known/timestamppb\"\n\twrapperspb \"google.golang.org/protobuf/types/known/wrapperspb\"\n\treflect \"reflect\"\n\tsync \"sync\"\n\tunsafe \"unsafe\"\n)\n\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)\n\n// Network flow collection mechanism configured in the operator.\ntype FlowCollector int32\n\nconst (\n\t// Default value. This value is unused and should not be set.\n\tFlowCollector_FLOW_COLLECTOR_UNSPECIFIED FlowCollector = 0\n\t// Indicates that no suitable network flow collection mechanism is available in the k8s cluster.\n\tFlowCollector_FLOW_COLLECTOR_DISABLED FlowCollector = 1\n\t// Indicates that the Cilium CNI plugin is deployed with Hubble Relay and is used for collecting network flows.\n\tFlowCollector_FLOW_COLLECTOR_CILIUM FlowCollector = 2\n\t// Indicates that Falco is deployed and configured for collecting network flows.\n\tFlowCollector_FLOW_COLLECTOR_FALCO FlowCollector = 3\n)\n\n// Enum value maps for FlowCollector.\nvar (\n\tFlowCollector_name = map[int32]string{\n\t\t0: \"FLOW_COLLECTOR_UNSPECIFIED\",\n\t\t1: \"FLOW_COLLECTOR_DISABLED\",\n\t\t2: \"FLOW_COLLECTOR_CILIUM\",\n\t\t3: \"FLOW_COLLECTOR_FALCO\",\n\t}\n\tFlowCollector_value = map[string]int32{\n\t\t\"FLOW_COLLECTOR_UNSPECIFIED\": 0,\n\t\t\"FLOW_COLLECTOR_DISABLED\":    1,\n\t\t\"FLOW_COLLECTOR_CILIUM\":      2,\n\t\t\"FLOW_COLLECTOR_FALCO\":       3,\n\t}\n)\n\nfunc (x FlowCollector) Enum() *FlowCollector {\n\tp := new(FlowCollector)\n\t*p = x\n\treturn p\n}\n\nfunc (x FlowCollector) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n\nfunc (FlowCollector) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[0].Descriptor()\n}\n\nfunc (FlowCollector) Type() protoreflect.EnumType {\n\treturn &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[0]\n}\n\nfunc (x FlowCollector) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use FlowCollector.Descriptor instead.\nfunc (FlowCollector) EnumDescriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{0}\n}\n\n// TrafficDirection contains TrafficDirectopm header flags of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-trafficdirection\ntype TrafficDirection int32\n\nconst (\n\tTrafficDirection_TRAFFIC_DIRECTION_TRAFFIC_DIRECTION_UNKNOWN_UNSPECIFIED TrafficDirection = 0\n\tTrafficDirection_TRAFFIC_DIRECTION_INGRESS                               TrafficDirection = 1\n\tTrafficDirection_TRAFFIC_DIRECTION_EGRESS                                TrafficDirection = 2\n)\n\n// Enum value maps for TrafficDirection.\nvar (\n\tTrafficDirection_name = map[int32]string{\n\t\t0: \"TRAFFIC_DIRECTION_TRAFFIC_DIRECTION_UNKNOWN_UNSPECIFIED\",\n\t\t1: \"TRAFFIC_DIRECTION_INGRESS\",\n\t\t2: \"TRAFFIC_DIRECTION_EGRESS\",\n\t}\n\tTrafficDirection_value = map[string]int32{\n\t\t\"TRAFFIC_DIRECTION_TRAFFIC_DIRECTION_UNKNOWN_UNSPECIFIED\": 0,\n\t\t\"TRAFFIC_DIRECTION_INGRESS\":                               1,\n\t\t\"TRAFFIC_DIRECTION_EGRESS\":                                2,\n\t}\n)\n\nfunc (x TrafficDirection) Enum() *TrafficDirection {\n\tp := new(TrafficDirection)\n\t*p = x\n\treturn p\n}\n\nfunc (x TrafficDirection) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n\nfunc (TrafficDirection) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[1].Descriptor()\n}\n\nfunc (TrafficDirection) Type() protoreflect.EnumType {\n\treturn &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[1]\n}\n\nfunc (x TrafficDirection) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use TrafficDirection.Descriptor instead.\nfunc (TrafficDirection) EnumDescriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{1}\n}\n\n// Verdict contains Verdict header flags of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-verdict\ntype Verdict int32\n\nconst (\n\tVerdict_VERDICT_UNKNOWN_UNSPECIFIED Verdict = 0\n\tVerdict_VERDICT_FORWARDED           Verdict = 1\n\tVerdict_VERDICT_DROPPED             Verdict = 2\n\tVerdict_VERDICT_ERROR               Verdict = 3\n\tVerdict_VERDICT_AUDIT               Verdict = 4\n\tVerdict_VERDICT_REDIRECTED          Verdict = 5\n\tVerdict_VERDICT_TRACED              Verdict = 6\n\tVerdict_VERDICT_TRANSLATED          Verdict = 7\n)\n\n// Enum value maps for Verdict.\nvar (\n\tVerdict_name = map[int32]string{\n\t\t0: \"VERDICT_UNKNOWN_UNSPECIFIED\",\n\t\t1: \"VERDICT_FORWARDED\",\n\t\t2: \"VERDICT_DROPPED\",\n\t\t3: \"VERDICT_ERROR\",\n\t\t4: \"VERDICT_AUDIT\",\n\t\t5: \"VERDICT_REDIRECTED\",\n\t\t6: \"VERDICT_TRACED\",\n\t\t7: \"VERDICT_TRANSLATED\",\n\t}\n\tVerdict_value = map[string]int32{\n\t\t\"VERDICT_UNKNOWN_UNSPECIFIED\": 0,\n\t\t\"VERDICT_FORWARDED\":           1,\n\t\t\"VERDICT_DROPPED\":             2,\n\t\t\"VERDICT_ERROR\":               3,\n\t\t\"VERDICT_AUDIT\":               4,\n\t\t\"VERDICT_REDIRECTED\":          5,\n\t\t\"VERDICT_TRACED\":              6,\n\t\t\"VERDICT_TRANSLATED\":          7,\n\t}\n)\n\nfunc (x Verdict) Enum() *Verdict {\n\tp := new(Verdict)\n\t*p = x\n\treturn p\n}\n\nfunc (x Verdict) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n\nfunc (Verdict) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[2].Descriptor()\n}\n\nfunc (Verdict) Type() protoreflect.EnumType {\n\treturn &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[2]\n}\n\nfunc (x Verdict) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use Verdict.Descriptor instead.\nfunc (Verdict) EnumDescriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{2}\n}\n\n// IPVersion contains the IPVersion header flags of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-ipversion\ntype IPVersion int32\n\nconst (\n\tIPVersion_IP_VERSION_IP_NOT_USED_UNSPECIFIED IPVersion = 0\n\tIPVersion_IP_VERSION_IPV4                    IPVersion = 1\n\tIPVersion_IP_VERSION_IPV6                    IPVersion = 2\n)\n\n// Enum value maps for IPVersion.\nvar (\n\tIPVersion_name = map[int32]string{\n\t\t0: \"IP_VERSION_IP_NOT_USED_UNSPECIFIED\",\n\t\t1: \"IP_VERSION_IPV4\",\n\t\t2: \"IP_VERSION_IPV6\",\n\t}\n\tIPVersion_value = map[string]int32{\n\t\t\"IP_VERSION_IP_NOT_USED_UNSPECIFIED\": 0,\n\t\t\"IP_VERSION_IPV4\":                    1,\n\t\t\"IP_VERSION_IPV6\":                    2,\n\t}\n)\n\nfunc (x IPVersion) Enum() *IPVersion {\n\tp := new(IPVersion)\n\t*p = x\n\treturn p\n}\n\nfunc (x IPVersion) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n\nfunc (IPVersion) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[3].Descriptor()\n}\n\nfunc (IPVersion) Type() protoreflect.EnumType {\n\treturn &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[3]\n}\n\nfunc (x IPVersion) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use IPVersion.Descriptor instead.\nfunc (IPVersion) EnumDescriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{3}\n}\n\n// Enumeration to define the different levels of logging.\ntype LogLevel int32\n\nconst (\n\t// Default unspecified log level.\n\tLogLevel_LOG_LEVEL_UNSPECIFIED LogLevel = 0\n\t// Debug log level, useful for development and troubleshooting.\n\tLogLevel_LOG_LEVEL_DEBUG LogLevel = 1\n\t// Informational log level for general application information.\n\tLogLevel_LOG_LEVEL_INFO LogLevel = 2\n\t// Warning log level for potentially problematic situations.\n\tLogLevel_LOG_LEVEL_WARN LogLevel = 3\n\t// Error log level indicating something went wrong.\n\tLogLevel_LOG_LEVEL_ERROR LogLevel = 4\n)\n\n// Enum value maps for LogLevel.\nvar (\n\tLogLevel_name = map[int32]string{\n\t\t0: \"LOG_LEVEL_UNSPECIFIED\",\n\t\t1: \"LOG_LEVEL_DEBUG\",\n\t\t2: \"LOG_LEVEL_INFO\",\n\t\t3: \"LOG_LEVEL_WARN\",\n\t\t4: \"LOG_LEVEL_ERROR\",\n\t}\n\tLogLevel_value = map[string]int32{\n\t\t\"LOG_LEVEL_UNSPECIFIED\": 0,\n\t\t\"LOG_LEVEL_DEBUG\":       1,\n\t\t\"LOG_LEVEL_INFO\":        2,\n\t\t\"LOG_LEVEL_WARN\":        3,\n\t\t\"LOG_LEVEL_ERROR\":       4,\n\t}\n)\n\nfunc (x LogLevel) Enum() *LogLevel {\n\tp := new(LogLevel)\n\t*p = x\n\treturn p\n}\n\nfunc (x LogLevel) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n\nfunc (LogLevel) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[4].Descriptor()\n}\n\nfunc (LogLevel) Type() protoreflect.EnumType {\n\treturn &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes[4]\n}\n\nfunc (x LogLevel) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use LogLevel.Descriptor instead.\nfunc (LogLevel) EnumDescriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{4}\n}\n\n// Application-level keepalives. While gRPC already has an HTTP-level keepalive\n// mechanism, we have seen deployments where the server lives behind an ingress.\n// The gRPC system-level keepalive (represented by the `-`s in the diagram)\n// terminates at the ingress, and thus doesn't work end-to-end. This is solved\n// with an application level keepalive (represented by the `=`s in the diagram)\n//\n// +----------------+       +---------+          +--------+\n// |                +------>+         +          +        |\n// | cloud-operator +       + ingress +          + server |\n// |                +======>+         +=========>+        |\n// +----------------+       +---------+          +--------+\n//\n// Keepalives are important to us, because when the server restarts, the\n// connection may be closed between the Ingress and the server - but not between\n// the cloud-operator and the Ingress. Application-level keepalives will\n// re-establish connections to the server faster than if we wait for reasons to\n// send data over the channel\ntype Keepalive struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *Keepalive) Reset() {\n\t*x = Keepalive{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[0]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *Keepalive) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*Keepalive) ProtoMessage() {}\n\nfunc (x *Keepalive) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[0]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use Keepalive.ProtoReflect.Descriptor instead.\nfunc (*Keepalive) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{0}\n}\n\n// Metadata associated with a Kubernetes resource.\n// https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#objectmeta-v1-meta\ntype KubernetesObjectData struct {\n\tstate             protoimpl.MessageState      `protogen:\"open.v1\"`\n\tAnnotations       map[string]string           `protobuf:\"bytes,1,rep,name=annotations,proto3\" json:\"annotations,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tCreationTimestamp *timestamppb.Timestamp      `protobuf:\"bytes,2,opt,name=creation_timestamp,json=creationTimestamp,proto3\" json:\"creation_timestamp,omitempty\"`\n\tKind              string                      `protobuf:\"bytes,3,opt,name=kind,proto3\" json:\"kind,omitempty\"`\n\tLabels            map[string]string           `protobuf:\"bytes,4,rep,name=labels,proto3\" json:\"labels,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tName              string                      `protobuf:\"bytes,5,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tNamespace         string                      `protobuf:\"bytes,6,opt,name=namespace,proto3\" json:\"namespace,omitempty\"`\n\tOwnerReferences   []*KubernetesOwnerReference `protobuf:\"bytes,7,rep,name=owner_references,json=ownerReferences,proto3\" json:\"owner_references,omitempty\"`\n\tResourceVersion   string                      `protobuf:\"bytes,8,opt,name=resource_version,json=resourceVersion,proto3\" json:\"resource_version,omitempty\"`\n\tUid               string                      `protobuf:\"bytes,9,opt,name=uid,proto3\" json:\"uid,omitempty\"`\n\t// Types that are valid to be assigned to KindSpecific:\n\t//\n\t//\t*KubernetesObjectData_Pod\n\t//\t*KubernetesObjectData_Node\n\t//\t*KubernetesObjectData_Service\n\tKindSpecific  isKubernetesObjectData_KindSpecific `protobuf_oneof:\"kind_specific\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *KubernetesObjectData) Reset() {\n\t*x = KubernetesObjectData{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[1]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *KubernetesObjectData) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*KubernetesObjectData) ProtoMessage() {}\n\nfunc (x *KubernetesObjectData) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[1]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KubernetesObjectData.ProtoReflect.Descriptor instead.\nfunc (*KubernetesObjectData) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{1}\n}\n\nfunc (x *KubernetesObjectData) GetAnnotations() map[string]string {\n\tif x != nil {\n\t\treturn x.Annotations\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesObjectData) GetCreationTimestamp() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreationTimestamp\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesObjectData) GetKind() string {\n\tif x != nil {\n\t\treturn x.Kind\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesObjectData) GetLabels() map[string]string {\n\tif x != nil {\n\t\treturn x.Labels\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesObjectData) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesObjectData) GetNamespace() string {\n\tif x != nil {\n\t\treturn x.Namespace\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesObjectData) GetOwnerReferences() []*KubernetesOwnerReference {\n\tif x != nil {\n\t\treturn x.OwnerReferences\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesObjectData) GetResourceVersion() string {\n\tif x != nil {\n\t\treturn x.ResourceVersion\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesObjectData) GetUid() string {\n\tif x != nil {\n\t\treturn x.Uid\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesObjectData) GetKindSpecific() isKubernetesObjectData_KindSpecific {\n\tif x != nil {\n\t\treturn x.KindSpecific\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesObjectData) GetPod() *KubernetesPodData {\n\tif x != nil {\n\t\tif x, ok := x.KindSpecific.(*KubernetesObjectData_Pod); ok {\n\t\t\treturn x.Pod\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesObjectData) GetNode() *KubernetesNodeData {\n\tif x != nil {\n\t\tif x, ok := x.KindSpecific.(*KubernetesObjectData_Node); ok {\n\t\t\treturn x.Node\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesObjectData) GetService() *KubernetesServiceData {\n\tif x != nil {\n\t\tif x, ok := x.KindSpecific.(*KubernetesObjectData_Service); ok {\n\t\t\treturn x.Service\n\t\t}\n\t}\n\treturn nil\n}\n\ntype isKubernetesObjectData_KindSpecific interface {\n\tisKubernetesObjectData_KindSpecific()\n}\n\ntype KubernetesObjectData_Pod struct {\n\tPod *KubernetesPodData `protobuf:\"bytes,100,opt,name=pod,proto3,oneof\"`\n}\n\ntype KubernetesObjectData_Node struct {\n\tNode *KubernetesNodeData `protobuf:\"bytes,101,opt,name=node,proto3,oneof\"`\n}\n\ntype KubernetesObjectData_Service struct {\n\tService *KubernetesServiceData `protobuf:\"bytes,102,opt,name=service,proto3,oneof\"`\n}\n\nfunc (*KubernetesObjectData_Pod) isKubernetesObjectData_KindSpecific() {}\n\nfunc (*KubernetesObjectData_Node) isKubernetesObjectData_KindSpecific() {}\n\nfunc (*KubernetesObjectData_Service) isKubernetesObjectData_KindSpecific() {}\n\ntype KubernetesServiceData struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// List of IP addresses associated with the Kubernetes service\n\tIpAddresses []string `protobuf:\"bytes,1,rep,name=ip_addresses,json=ipAddresses,proto3\" json:\"ip_addresses,omitempty\"`\n\t// List of service ports details\n\tPorts []*KubernetesServiceData_ServicePort `protobuf:\"bytes,2,rep,name=ports,proto3\" json:\"ports,omitempty\"`\n\t// Type of Kubernetes service (e.g., ClusterIP, NodePort, LoadBalancer, etc.)\n\tType string `protobuf:\"bytes,3,opt,name=type,proto3\" json:\"type,omitempty\"`\n\t// The external reference that discovery mechanisms will\n\t// return as an alias for this service\n\tExternalName *string `protobuf:\"bytes,4,opt,name=external_name,json=externalName,proto3,oneof\" json:\"external_name,omitempty\"`\n\t// The class of the load balancer implementation this Service belongs to\n\tLoadBalancerClass *string `protobuf:\"bytes,5,opt,name=load_balancer_class,json=loadBalancerClass,proto3,oneof\" json:\"load_balancer_class,omitempty\"`\n\tunknownFields     protoimpl.UnknownFields\n\tsizeCache         protoimpl.SizeCache\n}\n\nfunc (x *KubernetesServiceData) Reset() {\n\t*x = KubernetesServiceData{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[2]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *KubernetesServiceData) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*KubernetesServiceData) ProtoMessage() {}\n\nfunc (x *KubernetesServiceData) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[2]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KubernetesServiceData.ProtoReflect.Descriptor instead.\nfunc (*KubernetesServiceData) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{2}\n}\n\nfunc (x *KubernetesServiceData) GetIpAddresses() []string {\n\tif x != nil {\n\t\treturn x.IpAddresses\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesServiceData) GetPorts() []*KubernetesServiceData_ServicePort {\n\tif x != nil {\n\t\treturn x.Ports\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesServiceData) GetType() string {\n\tif x != nil {\n\t\treturn x.Type\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesServiceData) GetExternalName() string {\n\tif x != nil && x.ExternalName != nil {\n\t\treturn *x.ExternalName\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesServiceData) GetLoadBalancerClass() string {\n\tif x != nil && x.LoadBalancerClass != nil {\n\t\treturn *x.LoadBalancerClass\n\t}\n\treturn \"\"\n}\n\n// KubernetesNodeData contains information specific to a Node Object.\ntype KubernetesNodeData struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Node.spec.providerID\n\tProviderId string `protobuf:\"bytes,1,opt,name=provider_id,json=providerId,proto3\" json:\"provider_id,omitempty\"`\n\t// List of ip addresses that are tied to Node so we can resolve them as workloads\n\tIpAddresses   []string `protobuf:\"bytes,2,rep,name=ip_addresses,json=ipAddresses,proto3\" json:\"ip_addresses,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *KubernetesNodeData) Reset() {\n\t*x = KubernetesNodeData{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[3]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *KubernetesNodeData) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*KubernetesNodeData) ProtoMessage() {}\n\nfunc (x *KubernetesNodeData) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[3]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KubernetesNodeData.ProtoReflect.Descriptor instead.\nfunc (*KubernetesNodeData) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{3}\n}\n\nfunc (x *KubernetesNodeData) GetProviderId() string {\n\tif x != nil {\n\t\treturn x.ProviderId\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesNodeData) GetIpAddresses() []string {\n\tif x != nil {\n\t\treturn x.IpAddresses\n\t}\n\treturn nil\n}\n\n// KubernetesPodData contains information specific to a Pod object.\n// It currently holds the IP addresses allocated to a pod. If this field is specified, the 0th entry must match the podIP field.\n// A Pod may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.\ntype KubernetesPodData struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tIpAddresses   []string               `protobuf:\"bytes,1,rep,name=ip_addresses,json=ipAddresses,proto3\" json:\"ip_addresses,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *KubernetesPodData) Reset() {\n\t*x = KubernetesPodData{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[4]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *KubernetesPodData) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*KubernetesPodData) ProtoMessage() {}\n\nfunc (x *KubernetesPodData) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[4]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KubernetesPodData.ProtoReflect.Descriptor instead.\nfunc (*KubernetesPodData) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{4}\n}\n\nfunc (x *KubernetesPodData) GetIpAddresses() []string {\n\tif x != nil {\n\t\treturn x.IpAddresses\n\t}\n\treturn nil\n}\n\n// Information identifying an object owning a Kubernetes resource.\n// https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#ownerreference-v1-meta\ntype KubernetesOwnerReference struct {\n\tstate              protoimpl.MessageState `protogen:\"open.v1\"`\n\tApiVersion         string                 `protobuf:\"bytes,1,opt,name=api_version,json=apiVersion,proto3\" json:\"api_version,omitempty\"`\n\tBlockOwnerDeletion bool                   `protobuf:\"varint,2,opt,name=block_owner_deletion,json=blockOwnerDeletion,proto3\" json:\"block_owner_deletion,omitempty\"`\n\tController         bool                   `protobuf:\"varint,3,opt,name=controller,proto3\" json:\"controller,omitempty\"`\n\tKind               string                 `protobuf:\"bytes,4,opt,name=kind,proto3\" json:\"kind,omitempty\"`\n\tName               string                 `protobuf:\"bytes,5,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tUid                string                 `protobuf:\"bytes,6,opt,name=uid,proto3\" json:\"uid,omitempty\"`\n\tunknownFields      protoimpl.UnknownFields\n\tsizeCache          protoimpl.SizeCache\n}\n\nfunc (x *KubernetesOwnerReference) Reset() {\n\t*x = KubernetesOwnerReference{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[5]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *KubernetesOwnerReference) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*KubernetesOwnerReference) ProtoMessage() {}\n\nfunc (x *KubernetesOwnerReference) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[5]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KubernetesOwnerReference.ProtoReflect.Descriptor instead.\nfunc (*KubernetesOwnerReference) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{5}\n}\n\nfunc (x *KubernetesOwnerReference) GetApiVersion() string {\n\tif x != nil {\n\t\treturn x.ApiVersion\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesOwnerReference) GetBlockOwnerDeletion() bool {\n\tif x != nil {\n\t\treturn x.BlockOwnerDeletion\n\t}\n\treturn false\n}\n\nfunc (x *KubernetesOwnerReference) GetController() bool {\n\tif x != nil {\n\t\treturn x.Controller\n\t}\n\treturn false\n}\n\nfunc (x *KubernetesOwnerReference) GetKind() string {\n\tif x != nil {\n\t\treturn x.Kind\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesOwnerReference) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesOwnerReference) GetUid() string {\n\tif x != nil {\n\t\treturn x.Uid\n\t}\n\treturn \"\"\n}\n\n// Metadata about the client operator and Kubernetes cluster.\n// Sent as the first message in each KubernetesResources RPC request stream.\ntype KubernetesClusterMetadata struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Unique ID of the client operator's Kubernetes cluster.\n\t// This is the UID of the cluster's kube-system namespace, which is considered globally unique.\n\tUid string `protobuf:\"bytes,1,opt,name=uid,proto3\" json:\"uid,omitempty\"`\n\t// Kubernetes version of the operator's cluster.\n\t// https://pkg.go.dev/k8s.io/client-go/discovery#DiscoveryClient.ServerVersion\n\tKubernetesVersion string `protobuf:\"bytes,2,opt,name=kubernetes_version,json=kubernetesVersion,proto3\" json:\"kubernetes_version,omitempty\"`\n\t// Version of the operator. This version is following the Semver 2.0.0 format, e.g. \"1.2.0\".\n\t// https://semver.org/spec/v2.0.0.html\n\tOperatorVersion string `protobuf:\"bytes,3,opt,name=operator_version,json=operatorVersion,proto3\" json:\"operator_version,omitempty\"`\n\t// The network flow collection mechanism configured in the operator's cluster\n\tFlowCollector FlowCollector `protobuf:\"varint,4,opt,name=flow_collector,json=flowCollector,proto3,enum=illumio.cloud.k8sclustersync.v1.FlowCollector\" json:\"flow_collector,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *KubernetesClusterMetadata) Reset() {\n\t*x = KubernetesClusterMetadata{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[6]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *KubernetesClusterMetadata) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*KubernetesClusterMetadata) ProtoMessage() {}\n\nfunc (x *KubernetesClusterMetadata) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[6]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KubernetesClusterMetadata.ProtoReflect.Descriptor instead.\nfunc (*KubernetesClusterMetadata) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{6}\n}\n\nfunc (x *KubernetesClusterMetadata) GetUid() string {\n\tif x != nil {\n\t\treturn x.Uid\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesClusterMetadata) GetKubernetesVersion() string {\n\tif x != nil {\n\t\treturn x.KubernetesVersion\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesClusterMetadata) GetOperatorVersion() string {\n\tif x != nil {\n\t\treturn x.OperatorVersion\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesClusterMetadata) GetFlowCollector() FlowCollector {\n\tif x != nil {\n\t\treturn x.FlowCollector\n\t}\n\treturn FlowCollector_FLOW_COLLECTOR_UNSPECIFIED\n}\n\n// Message sent by the operator in a KubernetesResources request stream.\n// Message subtypes are sent in this order in each stream:\n// 1. (1) cluster_metadata, to identify the client cluster and operator.\n// 2. (0+) resource_metadata, one message for each resource in the cluster.\n// 3. (1) resource_snapshot_complete, to indicate the initial snapshot of all resources in the cluster is complete.\n// 4. (0+) resource_mutation, one message for each resource creation/update/deletion in the cluster.\ntype SendKubernetesResourcesRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Send any of these \"request\" messages that can contain any of the documented types.\n\t//\n\t// Types that are valid to be assigned to Request:\n\t//\n\t//\t*SendKubernetesResourcesRequest_Keepalive\n\t//\t*SendKubernetesResourcesRequest_ClusterMetadata\n\t//\t*SendKubernetesResourcesRequest_ResourceData\n\t//\t*SendKubernetesResourcesRequest_ResourceSnapshotComplete\n\t//\t*SendKubernetesResourcesRequest_KubernetesResourceMutation\n\tRequest       isSendKubernetesResourcesRequest_Request `protobuf_oneof:\"request\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *SendKubernetesResourcesRequest) Reset() {\n\t*x = SendKubernetesResourcesRequest{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[7]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *SendKubernetesResourcesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*SendKubernetesResourcesRequest) ProtoMessage() {}\n\nfunc (x *SendKubernetesResourcesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[7]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SendKubernetesResourcesRequest.ProtoReflect.Descriptor instead.\nfunc (*SendKubernetesResourcesRequest) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{7}\n}\n\nfunc (x *SendKubernetesResourcesRequest) GetRequest() isSendKubernetesResourcesRequest_Request {\n\tif x != nil {\n\t\treturn x.Request\n\t}\n\treturn nil\n}\n\nfunc (x *SendKubernetesResourcesRequest) GetKeepalive() *Keepalive {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendKubernetesResourcesRequest_Keepalive); ok {\n\t\t\treturn x.Keepalive\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *SendKubernetesResourcesRequest) GetClusterMetadata() *KubernetesClusterMetadata {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendKubernetesResourcesRequest_ClusterMetadata); ok {\n\t\t\treturn x.ClusterMetadata\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *SendKubernetesResourcesRequest) GetResourceData() *KubernetesObjectData {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendKubernetesResourcesRequest_ResourceData); ok {\n\t\t\treturn x.ResourceData\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *SendKubernetesResourcesRequest) GetResourceSnapshotComplete() *KubernetesResourceSnapshotComplete {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendKubernetesResourcesRequest_ResourceSnapshotComplete); ok {\n\t\t\treturn x.ResourceSnapshotComplete\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *SendKubernetesResourcesRequest) GetKubernetesResourceMutation() *KubernetesResourceMutation {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendKubernetesResourcesRequest_KubernetesResourceMutation); ok {\n\t\t\treturn x.KubernetesResourceMutation\n\t\t}\n\t}\n\treturn nil\n}\n\ntype isSendKubernetesResourcesRequest_Request interface {\n\tisSendKubernetesResourcesRequest_Request()\n}\n\ntype SendKubernetesResourcesRequest_Keepalive struct {\n\tKeepalive *Keepalive `protobuf:\"bytes,5,opt,name=keepalive,proto3,oneof\"`\n}\n\ntype SendKubernetesResourcesRequest_ClusterMetadata struct {\n\t// Metadata about the cluster and operator.\n\tClusterMetadata *KubernetesClusterMetadata `protobuf:\"bytes,1,opt,name=cluster_metadata,json=clusterMetadata,proto3,oneof\"`\n}\n\ntype SendKubernetesResourcesRequest_ResourceData struct {\n\t// Metadata about a Kubernetes resource in the cluster.\n\tResourceData *KubernetesObjectData `protobuf:\"bytes,2,opt,name=resource_data,json=resourceData,proto3,oneof\"`\n}\n\ntype SendKubernetesResourcesRequest_ResourceSnapshotComplete struct {\n\t// Indicates that all resource_metadata have been sent to report all the resources in the cluster in the initial snapshot.\n\tResourceSnapshotComplete *KubernetesResourceSnapshotComplete `protobuf:\"bytes,3,opt,name=resource_snapshot_complete,json=resourceSnapshotComplete,proto3,oneof\"`\n}\n\ntype SendKubernetesResourcesRequest_KubernetesResourceMutation struct {\n\t// A mutation to a Kubernetes resource in the cluster.\n\tKubernetesResourceMutation *KubernetesResourceMutation `protobuf:\"bytes,4,opt,name=kubernetes_resource_mutation,json=kubernetesResourceMutation,proto3,oneof\"`\n}\n\nfunc (*SendKubernetesResourcesRequest_Keepalive) isSendKubernetesResourcesRequest_Request() {}\n\nfunc (*SendKubernetesResourcesRequest_ClusterMetadata) isSendKubernetesResourcesRequest_Request() {}\n\nfunc (*SendKubernetesResourcesRequest_ResourceData) isSendKubernetesResourcesRequest_Request() {}\n\nfunc (*SendKubernetesResourcesRequest_ResourceSnapshotComplete) isSendKubernetesResourcesRequest_Request() {\n}\n\nfunc (*SendKubernetesResourcesRequest_KubernetesResourceMutation) isSendKubernetesResourcesRequest_Request() {\n}\n\n// Empty on purpose since this type is just expected when snapshot stream is done.\ntype KubernetesResourceSnapshotComplete struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *KubernetesResourceSnapshotComplete) Reset() {\n\t*x = KubernetesResourceSnapshotComplete{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[8]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *KubernetesResourceSnapshotComplete) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*KubernetesResourceSnapshotComplete) ProtoMessage() {}\n\nfunc (x *KubernetesResourceSnapshotComplete) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[8]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KubernetesResourceSnapshotComplete.ProtoReflect.Descriptor instead.\nfunc (*KubernetesResourceSnapshotComplete) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{8}\n}\n\n// Message sent to the operator in a KubernetesResources response stream.\ntype SendKubernetesResourcesResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *SendKubernetesResourcesResponse) Reset() {\n\t*x = SendKubernetesResourcesResponse{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[9]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *SendKubernetesResourcesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*SendKubernetesResourcesResponse) ProtoMessage() {}\n\nfunc (x *SendKubernetesResourcesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[9]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SendKubernetesResourcesResponse.ProtoReflect.Descriptor instead.\nfunc (*SendKubernetesResourcesResponse) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{9}\n}\n\n// A mutation to a Kubernetes resource in the cluster.\n// Each mutation contains the full resource metadata after mutation (on create or update)\n// or before mutation (on delete).\ntype KubernetesResourceMutation struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Send any of these \"mutation\" messages that can contain any of\n\t// The documented types\n\t//\n\t// Types that are valid to be assigned to Mutation:\n\t//\n\t//\t*KubernetesResourceMutation_CreateResource\n\t//\t*KubernetesResourceMutation_UpdateResource\n\t//\t*KubernetesResourceMutation_DeleteResource\n\tMutation      isKubernetesResourceMutation_Mutation `protobuf_oneof:\"mutation\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *KubernetesResourceMutation) Reset() {\n\t*x = KubernetesResourceMutation{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[10]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *KubernetesResourceMutation) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*KubernetesResourceMutation) ProtoMessage() {}\n\nfunc (x *KubernetesResourceMutation) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[10]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KubernetesResourceMutation.ProtoReflect.Descriptor instead.\nfunc (*KubernetesResourceMutation) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{10}\n}\n\nfunc (x *KubernetesResourceMutation) GetMutation() isKubernetesResourceMutation_Mutation {\n\tif x != nil {\n\t\treturn x.Mutation\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesResourceMutation) GetCreateResource() *KubernetesObjectData {\n\tif x != nil {\n\t\tif x, ok := x.Mutation.(*KubernetesResourceMutation_CreateResource); ok {\n\t\t\treturn x.CreateResource\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesResourceMutation) GetUpdateResource() *KubernetesObjectData {\n\tif x != nil {\n\t\tif x, ok := x.Mutation.(*KubernetesResourceMutation_UpdateResource); ok {\n\t\t\treturn x.UpdateResource\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *KubernetesResourceMutation) GetDeleteResource() *KubernetesObjectData {\n\tif x != nil {\n\t\tif x, ok := x.Mutation.(*KubernetesResourceMutation_DeleteResource); ok {\n\t\t\treturn x.DeleteResource\n\t\t}\n\t}\n\treturn nil\n}\n\ntype isKubernetesResourceMutation_Mutation interface {\n\tisKubernetesResourceMutation_Mutation()\n}\n\ntype KubernetesResourceMutation_CreateResource struct {\n\t// Metadata of a newly created Kubernetes resource.\n\tCreateResource *KubernetesObjectData `protobuf:\"bytes,1,opt,name=create_resource,json=createResource,proto3,oneof\"`\n}\n\ntype KubernetesResourceMutation_UpdateResource struct {\n\t// Metadata of an updated Kubernetes resource, after update.\n\tUpdateResource *KubernetesObjectData `protobuf:\"bytes,2,opt,name=update_resource,json=updateResource,proto3,oneof\"`\n}\n\ntype KubernetesResourceMutation_DeleteResource struct {\n\t// Metadata of a deleted Kubernetes resource, before deletion.\n\tDeleteResource *KubernetesObjectData `protobuf:\"bytes,3,opt,name=delete_resource,json=deleteResource,proto3,oneof\"`\n}\n\nfunc (*KubernetesResourceMutation_CreateResource) isKubernetesResourceMutation_Mutation() {}\n\nfunc (*KubernetesResourceMutation_UpdateResource) isKubernetesResourceMutation_Mutation() {}\n\nfunc (*KubernetesResourceMutation_DeleteResource) isKubernetesResourceMutation_Mutation() {}\n\n// A flow received from Falco using custom rules\ntype FalcoFlow struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// layer3 IP layer, source, destination and ip_version\n\tLayer3 *IP `protobuf:\"bytes,1,opt,name=layer3,proto3\" json:\"layer3,omitempty\"`\n\t// Proto contains protocol used\n\tLayer4 *Layer4 `protobuf:\"bytes,2,opt,name=layer4,proto3\" json:\"layer4,omitempty\"`\n\t// Types that are valid to be assigned to Ts:\n\t//\n\t//\t*FalcoFlow_Time\n\t//\t*FalcoFlow_Timestamp\n\tTs            isFalcoFlow_Ts `protobuf_oneof:\"ts\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *FalcoFlow) Reset() {\n\t*x = FalcoFlow{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[11]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *FalcoFlow) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*FalcoFlow) ProtoMessage() {}\n\nfunc (x *FalcoFlow) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[11]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use FalcoFlow.ProtoReflect.Descriptor instead.\nfunc (*FalcoFlow) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{11}\n}\n\nfunc (x *FalcoFlow) GetLayer3() *IP {\n\tif x != nil {\n\t\treturn x.Layer3\n\t}\n\treturn nil\n}\n\nfunc (x *FalcoFlow) GetLayer4() *Layer4 {\n\tif x != nil {\n\t\treturn x.Layer4\n\t}\n\treturn nil\n}\n\nfunc (x *FalcoFlow) GetTs() isFalcoFlow_Ts {\n\tif x != nil {\n\t\treturn x.Ts\n\t}\n\treturn nil\n}\n\n// Deprecated: Marked as deprecated in illumio/cloud/k8sclustersync/v1/k8s_info.proto.\nfunc (x *FalcoFlow) GetTime() string {\n\tif x != nil {\n\t\tif x, ok := x.Ts.(*FalcoFlow_Time); ok {\n\t\t\treturn x.Time\n\t\t}\n\t}\n\treturn \"\"\n}\n\nfunc (x *FalcoFlow) GetTimestamp() *timestamppb.Timestamp {\n\tif x != nil {\n\t\tif x, ok := x.Ts.(*FalcoFlow_Timestamp); ok {\n\t\t\treturn x.Timestamp\n\t\t}\n\t}\n\treturn nil\n}\n\ntype isFalcoFlow_Ts interface {\n\tisFalcoFlow_Ts()\n}\n\ntype FalcoFlow_Time struct {\n\t// time contains the unparsed timestamp string received from Falco; parse it and set timestamp instead\n\t//\n\t// Deprecated: Marked as deprecated in illumio/cloud/k8sclustersync/v1/k8s_info.proto.\n\tTime string `protobuf:\"bytes,3,opt,name=time,proto3,oneof\"`\n}\n\ntype FalcoFlow_Timestamp struct {\n\tTimestamp *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=timestamp,proto3,oneof\"`\n}\n\nfunc (*FalcoFlow_Time) isFalcoFlow_Ts() {}\n\nfunc (*FalcoFlow_Timestamp) isFalcoFlow_Ts() {}\n\n// A flow received from Cilium Hubble Relay using the Observer service's GetFlows RPC.\n// https://github.com/cilium/cilium/blob/main/api/v1/observer/observer.proto\ntype CiliumFlow struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Time when flow occurred.\n\tTime *timestamppb.Timestamp `protobuf:\"bytes,1,opt,name=time,proto3\" json:\"time,omitempty\"`\n\t// node_name is the name of the node from which this Flow was captured.\n\tNodeName string `protobuf:\"bytes,2,opt,name=node_name,json=nodeName,proto3\" json:\"node_name,omitempty\"`\n\t// traffic_direction distinguishes direction of the connection, e.g. ingress or egress.\n\tTrafficDirection TrafficDirection `protobuf:\"varint,3,opt,name=traffic_direction,json=trafficDirection,proto3,enum=illumio.cloud.k8sclustersync.v1.TrafficDirection\" json:\"traffic_direction,omitempty\"`\n\t// verdict of the flow, indicating the outcome of the network packet processing.\n\tVerdict Verdict `protobuf:\"varint,4,opt,name=verdict,proto3,enum=illumio.cloud.k8sclustersync.v1.Verdict\" json:\"verdict,omitempty\"`\n\t// layer3 IP layer, source, destination and ip_version\n\tLayer3 *IP `protobuf:\"bytes,5,opt,name=layer3,proto3\" json:\"layer3,omitempty\"`\n\t// layer4 contains protocol used\n\tLayer4 *Layer4 `protobuf:\"bytes,6,opt,name=layer4,proto3\" json:\"layer4,omitempty\"`\n\t// is_reply indicates that this was a packet (L4) or message (L7) in the\n\t// reply direction. May be absent (in which case it is unknown whether it\n\t// is a reply or not).\n\tIsReply *wrapperspb.BoolValue `protobuf:\"bytes,7,opt,name=is_reply,json=isReply,proto3\" json:\"is_reply,omitempty\"`\n\t// endpoint of source ip with metadata\n\tSourceEndpoint *Endpoint `protobuf:\"bytes,8,opt,name=source_endpoint,json=sourceEndpoint,proto3,oneof\" json:\"source_endpoint,omitempty\"`\n\t// endpoint of destination ip with metadata\n\tDestinationEndpoint *Endpoint `protobuf:\"bytes,9,opt,name=destination_endpoint,json=destinationEndpoint,proto3,oneof\" json:\"destination_endpoint,omitempty\"`\n\t// destination_service contains the service name of the destination\n\tDestinationService *Service `protobuf:\"bytes,10,opt,name=destination_service,json=destinationService,proto3\" json:\"destination_service,omitempty\"`\n\t// The CiliumNetworkPolicies allowing the egress of the flow.\n\tEgressAllowedBy []*Policy `protobuf:\"bytes,11,rep,name=egress_allowed_by,json=egressAllowedBy,proto3\" json:\"egress_allowed_by,omitempty\"`\n\t// The CiliumNetworkPolicies allowing the ingress of the flow.\n\tIngressAllowedBy []*Policy `protobuf:\"bytes,12,rep,name=ingress_allowed_by,json=ingressAllowedBy,proto3\" json:\"ingress_allowed_by,omitempty\"`\n\t// The CiliumNetworkPolicies denying the egress of the flow.\n\tEgressDeniedBy []*Policy `protobuf:\"bytes,13,rep,name=egress_denied_by,json=egressDeniedBy,proto3\" json:\"egress_denied_by,omitempty\"`\n\t// The CiliumNetworkPolicies denying the ingress of the flow.\n\tIngressDeniedBy []*Policy `protobuf:\"bytes,14,rep,name=ingress_denied_by,json=ingressDeniedBy,proto3\" json:\"ingress_denied_by,omitempty\"`\n\tunknownFields   protoimpl.UnknownFields\n\tsizeCache       protoimpl.SizeCache\n}\n\nfunc (x *CiliumFlow) Reset() {\n\t*x = CiliumFlow{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[12]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *CiliumFlow) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*CiliumFlow) ProtoMessage() {}\n\nfunc (x *CiliumFlow) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[12]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use CiliumFlow.ProtoReflect.Descriptor instead.\nfunc (*CiliumFlow) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{12}\n}\n\nfunc (x *CiliumFlow) GetTime() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.Time\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetNodeName() string {\n\tif x != nil {\n\t\treturn x.NodeName\n\t}\n\treturn \"\"\n}\n\nfunc (x *CiliumFlow) GetTrafficDirection() TrafficDirection {\n\tif x != nil {\n\t\treturn x.TrafficDirection\n\t}\n\treturn TrafficDirection_TRAFFIC_DIRECTION_TRAFFIC_DIRECTION_UNKNOWN_UNSPECIFIED\n}\n\nfunc (x *CiliumFlow) GetVerdict() Verdict {\n\tif x != nil {\n\t\treturn x.Verdict\n\t}\n\treturn Verdict_VERDICT_UNKNOWN_UNSPECIFIED\n}\n\nfunc (x *CiliumFlow) GetLayer3() *IP {\n\tif x != nil {\n\t\treturn x.Layer3\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetLayer4() *Layer4 {\n\tif x != nil {\n\t\treturn x.Layer4\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetIsReply() *wrapperspb.BoolValue {\n\tif x != nil {\n\t\treturn x.IsReply\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetSourceEndpoint() *Endpoint {\n\tif x != nil {\n\t\treturn x.SourceEndpoint\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetDestinationEndpoint() *Endpoint {\n\tif x != nil {\n\t\treturn x.DestinationEndpoint\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetDestinationService() *Service {\n\tif x != nil {\n\t\treturn x.DestinationService\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetEgressAllowedBy() []*Policy {\n\tif x != nil {\n\t\treturn x.EgressAllowedBy\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetIngressAllowedBy() []*Policy {\n\tif x != nil {\n\t\treturn x.IngressAllowedBy\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetEgressDeniedBy() []*Policy {\n\tif x != nil {\n\t\treturn x.EgressDeniedBy\n\t}\n\treturn nil\n}\n\nfunc (x *CiliumFlow) GetIngressDeniedBy() []*Policy {\n\tif x != nil {\n\t\treturn x.IngressDeniedBy\n\t}\n\treturn nil\n}\n\n// Service contains Service header fields of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#Service\ntype Service struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tName          string                 `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tNamespace     string                 `protobuf:\"bytes,2,opt,name=namespace,proto3\" json:\"namespace,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *Service) Reset() {\n\t*x = Service{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[13]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *Service) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*Service) ProtoMessage() {}\n\nfunc (x *Service) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[13]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use Service.ProtoReflect.Descriptor instead.\nfunc (*Service) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{13}\n}\n\nfunc (x *Service) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n\nfunc (x *Service) GetNamespace() string {\n\tif x != nil {\n\t\treturn x.Namespace\n\t}\n\treturn \"\"\n}\n\n// IP contains the IP header fields of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-ip\ntype IP struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tSource        string                 `protobuf:\"bytes,1,opt,name=source,proto3\" json:\"source,omitempty\"`\n\tDestination   string                 `protobuf:\"bytes,2,opt,name=destination,proto3\" json:\"destination,omitempty\"`\n\tIpVersion     IPVersion              `protobuf:\"varint,3,opt,name=ip_version,json=ipVersion,proto3,enum=illumio.cloud.k8sclustersync.v1.IPVersion\" json:\"ip_version,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *IP) Reset() {\n\t*x = IP{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[14]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *IP) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*IP) ProtoMessage() {}\n\nfunc (x *IP) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[14]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use IP.ProtoReflect.Descriptor instead.\nfunc (*IP) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{14}\n}\n\nfunc (x *IP) GetSource() string {\n\tif x != nil {\n\t\treturn x.Source\n\t}\n\treturn \"\"\n}\n\nfunc (x *IP) GetDestination() string {\n\tif x != nil {\n\t\treturn x.Destination\n\t}\n\treturn \"\"\n}\n\nfunc (x *IP) GetIpVersion() IPVersion {\n\tif x != nil {\n\t\treturn x.IpVersion\n\t}\n\treturn IPVersion_IP_VERSION_IP_NOT_USED_UNSPECIFIED\n}\n\n// Layer4 contains the Layer-4 header fields of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-layer4\ntype Layer4 struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Types that are valid to be assigned to Protocol:\n\t//\n\t//\t*Layer4_Tcp\n\t//\t*Layer4_Udp\n\t//\t*Layer4_Icmpv4\n\t//\t*Layer4_Icmpv6\n\t//\t*Layer4_Sctp\n\tProtocol      isLayer4_Protocol `protobuf_oneof:\"protocol\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *Layer4) Reset() {\n\t*x = Layer4{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[15]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *Layer4) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*Layer4) ProtoMessage() {}\n\nfunc (x *Layer4) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[15]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use Layer4.ProtoReflect.Descriptor instead.\nfunc (*Layer4) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{15}\n}\n\nfunc (x *Layer4) GetProtocol() isLayer4_Protocol {\n\tif x != nil {\n\t\treturn x.Protocol\n\t}\n\treturn nil\n}\n\nfunc (x *Layer4) GetTcp() *TCP {\n\tif x != nil {\n\t\tif x, ok := x.Protocol.(*Layer4_Tcp); ok {\n\t\t\treturn x.Tcp\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *Layer4) GetUdp() *UDP {\n\tif x != nil {\n\t\tif x, ok := x.Protocol.(*Layer4_Udp); ok {\n\t\t\treturn x.Udp\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *Layer4) GetIcmpv4() *ICMPv4 {\n\tif x != nil {\n\t\tif x, ok := x.Protocol.(*Layer4_Icmpv4); ok {\n\t\t\treturn x.Icmpv4\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *Layer4) GetIcmpv6() *ICMPv6 {\n\tif x != nil {\n\t\tif x, ok := x.Protocol.(*Layer4_Icmpv6); ok {\n\t\t\treturn x.Icmpv6\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *Layer4) GetSctp() *SCTP {\n\tif x != nil {\n\t\tif x, ok := x.Protocol.(*Layer4_Sctp); ok {\n\t\t\treturn x.Sctp\n\t\t}\n\t}\n\treturn nil\n}\n\ntype isLayer4_Protocol interface {\n\tisLayer4_Protocol()\n}\n\ntype Layer4_Tcp struct {\n\tTcp *TCP `protobuf:\"bytes,1,opt,name=tcp,proto3,oneof\"`\n}\n\ntype Layer4_Udp struct {\n\tUdp *UDP `protobuf:\"bytes,2,opt,name=udp,proto3,oneof\"`\n}\n\ntype Layer4_Icmpv4 struct {\n\t// ICMP is technically not L4, but mutually exclusive with the above.\n\tIcmpv4 *ICMPv4 `protobuf:\"bytes,3,opt,name=icmpv4,proto3,oneof\"`\n}\n\ntype Layer4_Icmpv6 struct {\n\tIcmpv6 *ICMPv6 `protobuf:\"bytes,4,opt,name=icmpv6,proto3,oneof\"`\n}\n\ntype Layer4_Sctp struct {\n\tSctp *SCTP `protobuf:\"bytes,5,opt,name=sctp,proto3,oneof\"`\n}\n\nfunc (*Layer4_Tcp) isLayer4_Protocol() {}\n\nfunc (*Layer4_Udp) isLayer4_Protocol() {}\n\nfunc (*Layer4_Icmpv4) isLayer4_Protocol() {}\n\nfunc (*Layer4_Icmpv6) isLayer4_Protocol() {}\n\nfunc (*Layer4_Sctp) isLayer4_Protocol() {}\n\n// TCP contains the TCP header fields of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-tcp\ntype TCP struct {\n\tstate           protoimpl.MessageState `protogen:\"open.v1\"`\n\tSourcePort      uint32                 `protobuf:\"varint,1,opt,name=source_port,json=sourcePort,proto3\" json:\"source_port,omitempty\"`\n\tDestinationPort uint32                 `protobuf:\"varint,2,opt,name=destination_port,json=destinationPort,proto3\" json:\"destination_port,omitempty\"`\n\tFlags           *TCPFlags              `protobuf:\"bytes,3,opt,name=flags,proto3\" json:\"flags,omitempty\"`\n\tunknownFields   protoimpl.UnknownFields\n\tsizeCache       protoimpl.SizeCache\n}\n\nfunc (x *TCP) Reset() {\n\t*x = TCP{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[16]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *TCP) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*TCP) ProtoMessage() {}\n\nfunc (x *TCP) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[16]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use TCP.ProtoReflect.Descriptor instead.\nfunc (*TCP) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{16}\n}\n\nfunc (x *TCP) GetSourcePort() uint32 {\n\tif x != nil {\n\t\treturn x.SourcePort\n\t}\n\treturn 0\n}\n\nfunc (x *TCP) GetDestinationPort() uint32 {\n\tif x != nil {\n\t\treturn x.DestinationPort\n\t}\n\treturn 0\n}\n\nfunc (x *TCP) GetFlags() *TCPFlags {\n\tif x != nil {\n\t\treturn x.Flags\n\t}\n\treturn nil\n}\n\n// TCPFlags is the mask of TCP header flags observed in TCP packets in a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-tcpflags\ntype TCPFlags struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tFin           bool                   `protobuf:\"varint,1,opt,name=fin,proto3\" json:\"fin,omitempty\"`\n\tSyn           bool                   `protobuf:\"varint,2,opt,name=syn,proto3\" json:\"syn,omitempty\"`\n\tRst           bool                   `protobuf:\"varint,3,opt,name=rst,proto3\" json:\"rst,omitempty\"`\n\tPsh           bool                   `protobuf:\"varint,4,opt,name=psh,proto3\" json:\"psh,omitempty\"`\n\tAck           bool                   `protobuf:\"varint,5,opt,name=ack,proto3\" json:\"ack,omitempty\"`\n\tUrg           bool                   `protobuf:\"varint,6,opt,name=urg,proto3\" json:\"urg,omitempty\"`\n\tEce           bool                   `protobuf:\"varint,7,opt,name=ece,proto3\" json:\"ece,omitempty\"`\n\tCwr           bool                   `protobuf:\"varint,8,opt,name=cwr,proto3\" json:\"cwr,omitempty\"`\n\tNs            bool                   `protobuf:\"varint,9,opt,name=ns,proto3\" json:\"ns,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *TCPFlags) Reset() {\n\t*x = TCPFlags{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[17]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *TCPFlags) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*TCPFlags) ProtoMessage() {}\n\nfunc (x *TCPFlags) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[17]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use TCPFlags.ProtoReflect.Descriptor instead.\nfunc (*TCPFlags) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{17}\n}\n\nfunc (x *TCPFlags) GetFin() bool {\n\tif x != nil {\n\t\treturn x.Fin\n\t}\n\treturn false\n}\n\nfunc (x *TCPFlags) GetSyn() bool {\n\tif x != nil {\n\t\treturn x.Syn\n\t}\n\treturn false\n}\n\nfunc (x *TCPFlags) GetRst() bool {\n\tif x != nil {\n\t\treturn x.Rst\n\t}\n\treturn false\n}\n\nfunc (x *TCPFlags) GetPsh() bool {\n\tif x != nil {\n\t\treturn x.Psh\n\t}\n\treturn false\n}\n\nfunc (x *TCPFlags) GetAck() bool {\n\tif x != nil {\n\t\treturn x.Ack\n\t}\n\treturn false\n}\n\nfunc (x *TCPFlags) GetUrg() bool {\n\tif x != nil {\n\t\treturn x.Urg\n\t}\n\treturn false\n}\n\nfunc (x *TCPFlags) GetEce() bool {\n\tif x != nil {\n\t\treturn x.Ece\n\t}\n\treturn false\n}\n\nfunc (x *TCPFlags) GetCwr() bool {\n\tif x != nil {\n\t\treturn x.Cwr\n\t}\n\treturn false\n}\n\nfunc (x *TCPFlags) GetNs() bool {\n\tif x != nil {\n\t\treturn x.Ns\n\t}\n\treturn false\n}\n\n// UDP contains the UDP header fields of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-udp\ntype UDP struct {\n\tstate           protoimpl.MessageState `protogen:\"open.v1\"`\n\tSourcePort      uint32                 `protobuf:\"varint,1,opt,name=source_port,json=sourcePort,proto3\" json:\"source_port,omitempty\"`\n\tDestinationPort uint32                 `protobuf:\"varint,2,opt,name=destination_port,json=destinationPort,proto3\" json:\"destination_port,omitempty\"`\n\tunknownFields   protoimpl.UnknownFields\n\tsizeCache       protoimpl.SizeCache\n}\n\nfunc (x *UDP) Reset() {\n\t*x = UDP{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[18]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *UDP) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*UDP) ProtoMessage() {}\n\nfunc (x *UDP) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[18]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use UDP.ProtoReflect.Descriptor instead.\nfunc (*UDP) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{18}\n}\n\nfunc (x *UDP) GetSourcePort() uint32 {\n\tif x != nil {\n\t\treturn x.SourcePort\n\t}\n\treturn 0\n}\n\nfunc (x *UDP) GetDestinationPort() uint32 {\n\tif x != nil {\n\t\treturn x.DestinationPort\n\t}\n\treturn 0\n}\n\n// SCTP contains the SCTP header fields of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-sctp\ntype SCTP struct {\n\tstate           protoimpl.MessageState `protogen:\"open.v1\"`\n\tSourcePort      uint32                 `protobuf:\"varint,1,opt,name=source_port,json=sourcePort,proto3\" json:\"source_port,omitempty\"`\n\tDestinationPort uint32                 `protobuf:\"varint,2,opt,name=destination_port,json=destinationPort,proto3\" json:\"destination_port,omitempty\"`\n\tunknownFields   protoimpl.UnknownFields\n\tsizeCache       protoimpl.SizeCache\n}\n\nfunc (x *SCTP) Reset() {\n\t*x = SCTP{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[19]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *SCTP) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*SCTP) ProtoMessage() {}\n\nfunc (x *SCTP) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[19]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SCTP.ProtoReflect.Descriptor instead.\nfunc (*SCTP) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{19}\n}\n\nfunc (x *SCTP) GetSourcePort() uint32 {\n\tif x != nil {\n\t\treturn x.SourcePort\n\t}\n\treturn 0\n}\n\nfunc (x *SCTP) GetDestinationPort() uint32 {\n\tif x != nil {\n\t\treturn x.DestinationPort\n\t}\n\treturn 0\n}\n\n// ICMPv4 contains the ICMPv4 header fields of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-icmpv4\ntype ICMPv4 struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tType          uint32                 `protobuf:\"varint,1,opt,name=type,proto3\" json:\"type,omitempty\"`\n\tCode          uint32                 `protobuf:\"varint,2,opt,name=code,proto3\" json:\"code,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *ICMPv4) Reset() {\n\t*x = ICMPv4{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[20]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *ICMPv4) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*ICMPv4) ProtoMessage() {}\n\nfunc (x *ICMPv4) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[20]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use ICMPv4.ProtoReflect.Descriptor instead.\nfunc (*ICMPv4) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{20}\n}\n\nfunc (x *ICMPv4) GetType() uint32 {\n\tif x != nil {\n\t\treturn x.Type\n\t}\n\treturn 0\n}\n\nfunc (x *ICMPv4) GetCode() uint32 {\n\tif x != nil {\n\t\treturn x.Code\n\t}\n\treturn 0\n}\n\n// ICMPv6 contains the ICMPv6 header fields of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-icmpv6\ntype ICMPv6 struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tType          uint32                 `protobuf:\"varint,1,opt,name=type,proto3\" json:\"type,omitempty\"`\n\tCode          uint32                 `protobuf:\"varint,2,opt,name=code,proto3\" json:\"code,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *ICMPv6) Reset() {\n\t*x = ICMPv6{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[21]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *ICMPv6) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*ICMPv6) ProtoMessage() {}\n\nfunc (x *ICMPv6) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[21]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use ICMPv6.ProtoReflect.Descriptor instead.\nfunc (*ICMPv6) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{21}\n}\n\nfunc (x *ICMPv6) GetType() uint32 {\n\tif x != nil {\n\t\treturn x.Type\n\t}\n\treturn 0\n}\n\nfunc (x *ICMPv6) GetCode() uint32 {\n\tif x != nil {\n\t\treturn x.Code\n\t}\n\treturn 0\n}\n\n// Endpoint contains the Endpoint header fields of a flow\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-endpoint\ntype Endpoint struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tUid           uint32                 `protobuf:\"varint,1,opt,name=uid,proto3\" json:\"uid,omitempty\"`\n\tClusterName   string                 `protobuf:\"bytes,7,opt,name=cluster_name,json=clusterName,proto3\" json:\"cluster_name,omitempty\"`\n\tNamespace     string                 `protobuf:\"bytes,3,opt,name=namespace,proto3\" json:\"namespace,omitempty\"`\n\tLabels        []string               `protobuf:\"bytes,4,rep,name=labels,proto3\" json:\"labels,omitempty\"`\n\tPodName       string                 `protobuf:\"bytes,5,opt,name=pod_name,json=podName,proto3\" json:\"pod_name,omitempty\"`\n\tWorkloads     []*Workload            `protobuf:\"bytes,6,rep,name=workloads,proto3\" json:\"workloads,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *Endpoint) Reset() {\n\t*x = Endpoint{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[22]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *Endpoint) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*Endpoint) ProtoMessage() {}\n\nfunc (x *Endpoint) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[22]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.\nfunc (*Endpoint) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{22}\n}\n\nfunc (x *Endpoint) GetUid() uint32 {\n\tif x != nil {\n\t\treturn x.Uid\n\t}\n\treturn 0\n}\n\nfunc (x *Endpoint) GetClusterName() string {\n\tif x != nil {\n\t\treturn x.ClusterName\n\t}\n\treturn \"\"\n}\n\nfunc (x *Endpoint) GetNamespace() string {\n\tif x != nil {\n\t\treturn x.Namespace\n\t}\n\treturn \"\"\n}\n\nfunc (x *Endpoint) GetLabels() []string {\n\tif x != nil {\n\t\treturn x.Labels\n\t}\n\treturn nil\n}\n\nfunc (x *Endpoint) GetPodName() string {\n\tif x != nil {\n\t\treturn x.PodName\n\t}\n\treturn \"\"\n}\n\nfunc (x *Endpoint) GetWorkloads() []*Workload {\n\tif x != nil {\n\t\treturn x.Workloads\n\t}\n\treturn nil\n}\n\n// Workload contains the Workload header fields of a flow\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-workload\ntype Workload struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tName          string                 `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tKind          string                 `protobuf:\"bytes,2,opt,name=kind,proto3\" json:\"kind,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *Workload) Reset() {\n\t*x = Workload{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[23]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *Workload) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*Workload) ProtoMessage() {}\n\nfunc (x *Workload) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[23]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use Workload.ProtoReflect.Descriptor instead.\nfunc (*Workload) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{23}\n}\n\nfunc (x *Workload) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n\nfunc (x *Workload) GetKind() string {\n\tif x != nil {\n\t\treturn x.Kind\n\t}\n\treturn \"\"\n}\n\n// Policy contains the Policy header fields of a flow.\n// https://pkg.go.dev/github.com/cilium/cilium/api/v1/flow#readme-policy\ntype Policy struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tName          string                 `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tNamespace     string                 `protobuf:\"bytes,2,opt,name=namespace,proto3\" json:\"namespace,omitempty\"`\n\tLabels        []string               `protobuf:\"bytes,3,rep,name=labels,proto3\" json:\"labels,omitempty\"`\n\tRevision      uint64                 `protobuf:\"varint,4,opt,name=revision,proto3\" json:\"revision,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *Policy) Reset() {\n\t*x = Policy{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[24]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *Policy) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*Policy) ProtoMessage() {}\n\nfunc (x *Policy) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[24]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use Policy.ProtoReflect.Descriptor instead.\nfunc (*Policy) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{24}\n}\n\nfunc (x *Policy) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n\nfunc (x *Policy) GetNamespace() string {\n\tif x != nil {\n\t\treturn x.Namespace\n\t}\n\treturn \"\"\n}\n\nfunc (x *Policy) GetLabels() []string {\n\tif x != nil {\n\t\treturn x.Labels\n\t}\n\treturn nil\n}\n\nfunc (x *Policy) GetRevision() uint64 {\n\tif x != nil {\n\t\treturn x.Revision\n\t}\n\treturn 0\n}\n\n// Flow exported by the CNI plugin in the cluster.\ntype SendKubernetesNetworkFlowsRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Types that are valid to be assigned to Request:\n\t//\n\t//\t*SendKubernetesNetworkFlowsRequest_Keepalive\n\t//\t*SendKubernetesNetworkFlowsRequest_CiliumFlow\n\t//\t*SendKubernetesNetworkFlowsRequest_FalcoFlow\n\tRequest       isSendKubernetesNetworkFlowsRequest_Request `protobuf_oneof:\"request\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *SendKubernetesNetworkFlowsRequest) Reset() {\n\t*x = SendKubernetesNetworkFlowsRequest{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[25]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *SendKubernetesNetworkFlowsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*SendKubernetesNetworkFlowsRequest) ProtoMessage() {}\n\nfunc (x *SendKubernetesNetworkFlowsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[25]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SendKubernetesNetworkFlowsRequest.ProtoReflect.Descriptor instead.\nfunc (*SendKubernetesNetworkFlowsRequest) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{25}\n}\n\nfunc (x *SendKubernetesNetworkFlowsRequest) GetRequest() isSendKubernetesNetworkFlowsRequest_Request {\n\tif x != nil {\n\t\treturn x.Request\n\t}\n\treturn nil\n}\n\nfunc (x *SendKubernetesNetworkFlowsRequest) GetKeepalive() *Keepalive {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendKubernetesNetworkFlowsRequest_Keepalive); ok {\n\t\t\treturn x.Keepalive\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *SendKubernetesNetworkFlowsRequest) GetCiliumFlow() *CiliumFlow {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendKubernetesNetworkFlowsRequest_CiliumFlow); ok {\n\t\t\treturn x.CiliumFlow\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *SendKubernetesNetworkFlowsRequest) GetFalcoFlow() *FalcoFlow {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendKubernetesNetworkFlowsRequest_FalcoFlow); ok {\n\t\t\treturn x.FalcoFlow\n\t\t}\n\t}\n\treturn nil\n}\n\ntype isSendKubernetesNetworkFlowsRequest_Request interface {\n\tisSendKubernetesNetworkFlowsRequest_Request()\n}\n\ntype SendKubernetesNetworkFlowsRequest_Keepalive struct {\n\tKeepalive *Keepalive `protobuf:\"bytes,3,opt,name=keepalive,proto3,oneof\"`\n}\n\ntype SendKubernetesNetworkFlowsRequest_CiliumFlow struct {\n\tCiliumFlow *CiliumFlow `protobuf:\"bytes,1,opt,name=cilium_flow,json=ciliumFlow,proto3,oneof\"`\n}\n\ntype SendKubernetesNetworkFlowsRequest_FalcoFlow struct {\n\tFalcoFlow *FalcoFlow `protobuf:\"bytes,2,opt,name=falco_flow,json=falcoFlow,proto3,oneof\"`\n}\n\nfunc (*SendKubernetesNetworkFlowsRequest_Keepalive) isSendKubernetesNetworkFlowsRequest_Request() {}\n\nfunc (*SendKubernetesNetworkFlowsRequest_CiliumFlow) isSendKubernetesNetworkFlowsRequest_Request() {}\n\nfunc (*SendKubernetesNetworkFlowsRequest_FalcoFlow) isSendKubernetesNetworkFlowsRequest_Request() {}\n\n// Message sent to the operator in a SendKubernetesNetworkFlows response stream.\ntype SendKubernetesNetworkFlowsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *SendKubernetesNetworkFlowsResponse) Reset() {\n\t*x = SendKubernetesNetworkFlowsResponse{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[26]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *SendKubernetesNetworkFlowsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*SendKubernetesNetworkFlowsResponse) ProtoMessage() {}\n\nfunc (x *SendKubernetesNetworkFlowsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[26]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SendKubernetesNetworkFlowsResponse.ProtoReflect.Descriptor instead.\nfunc (*SendKubernetesNetworkFlowsResponse) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{26}\n}\n\n// Message representing a log entry.\ntype LogEntry struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// The actual log message contents, as a JSON object.\n\tJsonMessage   string `protobuf:\"bytes,3,opt,name=json_message,json=jsonMessage,proto3\" json:\"json_message,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *LogEntry) Reset() {\n\t*x = LogEntry{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[27]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *LogEntry) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*LogEntry) ProtoMessage() {}\n\nfunc (x *LogEntry) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[27]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.\nfunc (*LogEntry) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{27}\n}\n\nfunc (x *LogEntry) GetJsonMessage() string {\n\tif x != nil {\n\t\treturn x.JsonMessage\n\t}\n\treturn \"\"\n}\n\n// Message to encapsulate a request to send logs.\ntype SendLogsRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Types that are valid to be assigned to Request:\n\t//\n\t//\t*SendLogsRequest_Keepalive\n\t//\t*SendLogsRequest_LogEntry\n\tRequest       isSendLogsRequest_Request `protobuf_oneof:\"request\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *SendLogsRequest) Reset() {\n\t*x = SendLogsRequest{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[28]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *SendLogsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*SendLogsRequest) ProtoMessage() {}\n\nfunc (x *SendLogsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[28]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SendLogsRequest.ProtoReflect.Descriptor instead.\nfunc (*SendLogsRequest) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{28}\n}\n\nfunc (x *SendLogsRequest) GetRequest() isSendLogsRequest_Request {\n\tif x != nil {\n\t\treturn x.Request\n\t}\n\treturn nil\n}\n\nfunc (x *SendLogsRequest) GetKeepalive() *Keepalive {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendLogsRequest_Keepalive); ok {\n\t\t\treturn x.Keepalive\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (x *SendLogsRequest) GetLogEntry() *LogEntry {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*SendLogsRequest_LogEntry); ok {\n\t\t\treturn x.LogEntry\n\t\t}\n\t}\n\treturn nil\n}\n\ntype isSendLogsRequest_Request interface {\n\tisSendLogsRequest_Request()\n}\n\ntype SendLogsRequest_Keepalive struct {\n\tKeepalive *Keepalive `protobuf:\"bytes,2,opt,name=keepalive,proto3,oneof\"`\n}\n\ntype SendLogsRequest_LogEntry struct {\n\t// A single log entry to be sent.\n\tLogEntry *LogEntry `protobuf:\"bytes,1,opt,name=log_entry,json=logEntry,proto3,oneof\"`\n}\n\nfunc (*SendLogsRequest_Keepalive) isSendLogsRequest_Request() {}\n\nfunc (*SendLogsRequest_LogEntry) isSendLogsRequest_Request() {}\n\n// Message to encapsulate the response for sending logs.\ntype SendLogsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *SendLogsResponse) Reset() {\n\t*x = SendLogsResponse{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[29]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *SendLogsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*SendLogsResponse) ProtoMessage() {}\n\nfunc (x *SendLogsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[29]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SendLogsResponse.ProtoReflect.Descriptor instead.\nfunc (*SendLogsResponse) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{29}\n}\n\n// Message to encapsulate a request to send configuration updates.\ntype GetConfigurationUpdatesRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Types that are valid to be assigned to Request:\n\t//\n\t//\t*GetConfigurationUpdatesRequest_Keepalive\n\tRequest       isGetConfigurationUpdatesRequest_Request `protobuf_oneof:\"request\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetConfigurationUpdatesRequest) Reset() {\n\t*x = GetConfigurationUpdatesRequest{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[30]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetConfigurationUpdatesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetConfigurationUpdatesRequest) ProtoMessage() {}\n\nfunc (x *GetConfigurationUpdatesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[30]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetConfigurationUpdatesRequest.ProtoReflect.Descriptor instead.\nfunc (*GetConfigurationUpdatesRequest) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{30}\n}\n\nfunc (x *GetConfigurationUpdatesRequest) GetRequest() isGetConfigurationUpdatesRequest_Request {\n\tif x != nil {\n\t\treturn x.Request\n\t}\n\treturn nil\n}\n\nfunc (x *GetConfigurationUpdatesRequest) GetKeepalive() *Keepalive {\n\tif x != nil {\n\t\tif x, ok := x.Request.(*GetConfigurationUpdatesRequest_Keepalive); ok {\n\t\t\treturn x.Keepalive\n\t\t}\n\t}\n\treturn nil\n}\n\ntype isGetConfigurationUpdatesRequest_Request interface {\n\tisGetConfigurationUpdatesRequest_Request()\n}\n\ntype GetConfigurationUpdatesRequest_Keepalive struct {\n\tKeepalive *Keepalive `protobuf:\"bytes,1,opt,name=keepalive,proto3,oneof\"`\n}\n\nfunc (*GetConfigurationUpdatesRequest_Keepalive) isGetConfigurationUpdatesRequest_Request() {}\n\n// Message to encapsulate the response for configuration update requests.\ntype GetConfigurationUpdatesResponse struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Types that are valid to be assigned to Response:\n\t//\n\t//\t*GetConfigurationUpdatesResponse_UpdateConfiguration\n\tResponse      isGetConfigurationUpdatesResponse_Response `protobuf_oneof:\"response\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetConfigurationUpdatesResponse) Reset() {\n\t*x = GetConfigurationUpdatesResponse{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[31]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetConfigurationUpdatesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetConfigurationUpdatesResponse) ProtoMessage() {}\n\nfunc (x *GetConfigurationUpdatesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[31]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetConfigurationUpdatesResponse.ProtoReflect.Descriptor instead.\nfunc (*GetConfigurationUpdatesResponse) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{31}\n}\n\nfunc (x *GetConfigurationUpdatesResponse) GetResponse() isGetConfigurationUpdatesResponse_Response {\n\tif x != nil {\n\t\treturn x.Response\n\t}\n\treturn nil\n}\n\nfunc (x *GetConfigurationUpdatesResponse) GetUpdateConfiguration() *GetConfigurationUpdatesResponse_Configuration {\n\tif x != nil {\n\t\tif x, ok := x.Response.(*GetConfigurationUpdatesResponse_UpdateConfiguration); ok {\n\t\t\treturn x.UpdateConfiguration\n\t\t}\n\t}\n\treturn nil\n}\n\ntype isGetConfigurationUpdatesResponse_Response interface {\n\tisGetConfigurationUpdatesResponse_Response()\n}\n\ntype GetConfigurationUpdatesResponse_UpdateConfiguration struct {\n\t// Updates the operator's configuration.\n\tUpdateConfiguration *GetConfigurationUpdatesResponse_Configuration `protobuf:\"bytes,1,opt,name=update_configuration,json=updateConfiguration,proto3,oneof\"`\n}\n\nfunc (*GetConfigurationUpdatesResponse_UpdateConfiguration) isGetConfigurationUpdatesResponse_Response() {\n}\n\ntype KubernetesServiceData_ServicePort struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// The port on each node on which this service is exposed\n\tNodePort *uint32 `protobuf:\"varint,1,opt,name=node_port,json=nodePort,proto3,oneof\" json:\"node_port,omitempty\"`\n\t// The port that will be exposed by this service\n\tPort uint32 `protobuf:\"varint,2,opt,name=port,proto3\" json:\"port,omitempty\"`\n\t// The IP protocol for this port, supports \"TCP\", \"UDP\", and \"SCTP\"\n\tProtocol string `protobuf:\"bytes,3,opt,name=protocol,proto3\" json:\"protocol,omitempty\"`\n\t// List of ports exposing the service via a load balancer\n\tLoadBalancerPorts []string `protobuf:\"bytes,4,rep,name=load_balancer_ports,json=loadBalancerPorts,proto3\" json:\"load_balancer_ports,omitempty\"`\n\tunknownFields     protoimpl.UnknownFields\n\tsizeCache         protoimpl.SizeCache\n}\n\nfunc (x *KubernetesServiceData_ServicePort) Reset() {\n\t*x = KubernetesServiceData_ServicePort{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[34]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *KubernetesServiceData_ServicePort) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*KubernetesServiceData_ServicePort) ProtoMessage() {}\n\nfunc (x *KubernetesServiceData_ServicePort) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[34]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KubernetesServiceData_ServicePort.ProtoReflect.Descriptor instead.\nfunc (*KubernetesServiceData_ServicePort) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{2, 0}\n}\n\nfunc (x *KubernetesServiceData_ServicePort) GetNodePort() uint32 {\n\tif x != nil && x.NodePort != nil {\n\t\treturn *x.NodePort\n\t}\n\treturn 0\n}\n\nfunc (x *KubernetesServiceData_ServicePort) GetPort() uint32 {\n\tif x != nil {\n\t\treturn x.Port\n\t}\n\treturn 0\n}\n\nfunc (x *KubernetesServiceData_ServicePort) GetProtocol() string {\n\tif x != nil {\n\t\treturn x.Protocol\n\t}\n\treturn \"\"\n}\n\nfunc (x *KubernetesServiceData_ServicePort) GetLoadBalancerPorts() []string {\n\tif x != nil {\n\t\treturn x.LoadBalancerPorts\n\t}\n\treturn nil\n}\n\ntype GetConfigurationUpdatesResponse_Configuration struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// The operator's log level.\n\tLogLevel      LogLevel `protobuf:\"varint,1,opt,name=log_level,json=logLevel,proto3,enum=illumio.cloud.k8sclustersync.v1.LogLevel\" json:\"log_level,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetConfigurationUpdatesResponse_Configuration) Reset() {\n\t*x = GetConfigurationUpdatesResponse_Configuration{}\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[35]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetConfigurationUpdatesResponse_Configuration) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetConfigurationUpdatesResponse_Configuration) ProtoMessage() {}\n\nfunc (x *GetConfigurationUpdatesResponse_Configuration) ProtoReflect() protoreflect.Message {\n\tmi := &file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[35]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetConfigurationUpdatesResponse_Configuration.ProtoReflect.Descriptor instead.\nfunc (*GetConfigurationUpdatesResponse_Configuration) Descriptor() ([]byte, []int) {\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP(), []int{31, 0}\n}\n\nfunc (x *GetConfigurationUpdatesResponse_Configuration) GetLogLevel() LogLevel {\n\tif x != nil {\n\t\treturn x.LogLevel\n\t}\n\treturn LogLevel_LOG_LEVEL_UNSPECIFIED\n}\n\nvar File_illumio_cloud_k8sclustersync_v1_k8s_info_proto protoreflect.FileDescriptor\n\nconst file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDesc = \"\" +\n\t\"\\n\" +\n\t\".illumio/cloud/k8sclustersync/v1/k8s_info.proto\\x12\\x1fillumio.cloud.k8sclustersync.v1\\x1a\\x1fgoogle/protobuf/timestamp.proto\\x1a\\x1egoogle/protobuf/wrappers.proto\\\"\\v\\n\" +\n\t\"\\tKeepalive\\\"\\x82\\a\\n\" +\n\t\"\\x14KubernetesObjectData\\x12h\\n\" +\n\t\"\\vannotations\\x18\\x01 \\x03(\\v2F.illumio.cloud.k8sclustersync.v1.KubernetesObjectData.AnnotationsEntryR\\vannotations\\x12I\\n\" +\n\t\"\\x12creation_timestamp\\x18\\x02 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\x11creationTimestamp\\x12\\x12\\n\" +\n\t\"\\x04kind\\x18\\x03 \\x01(\\tR\\x04kind\\x12Y\\n\" +\n\t\"\\x06labels\\x18\\x04 \\x03(\\v2A.illumio.cloud.k8sclustersync.v1.KubernetesObjectData.LabelsEntryR\\x06labels\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x05 \\x01(\\tR\\x04name\\x12\\x1c\\n\" +\n\t\"\\tnamespace\\x18\\x06 \\x01(\\tR\\tnamespace\\x12d\\n\" +\n\t\"\\x10owner_references\\x18\\a \\x03(\\v29.illumio.cloud.k8sclustersync.v1.KubernetesOwnerReferenceR\\x0fownerReferences\\x12)\\n\" +\n\t\"\\x10resource_version\\x18\\b \\x01(\\tR\\x0fresourceVersion\\x12\\x10\\n\" +\n\t\"\\x03uid\\x18\\t \\x01(\\tR\\x03uid\\x12F\\n\" +\n\t\"\\x03pod\\x18d \\x01(\\v22.illumio.cloud.k8sclustersync.v1.KubernetesPodDataH\\x00R\\x03pod\\x12I\\n\" +\n\t\"\\x04node\\x18e \\x01(\\v23.illumio.cloud.k8sclustersync.v1.KubernetesNodeDataH\\x00R\\x04node\\x12R\\n\" +\n\t\"\\aservice\\x18f \\x01(\\v26.illumio.cloud.k8sclustersync.v1.KubernetesServiceDataH\\x00R\\aservice\\x1a>\\n\" +\n\t\"\\x10AnnotationsEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a9\\n\" +\n\t\"\\vLabelsEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\x0f\\n\" +\n\t\"\\rkind_specific\\\"\\xd1\\x03\\n\" +\n\t\"\\x15KubernetesServiceData\\x12!\\n\" +\n\t\"\\fip_addresses\\x18\\x01 \\x03(\\tR\\vipAddresses\\x12X\\n\" +\n\t\"\\x05ports\\x18\\x02 \\x03(\\v2B.illumio.cloud.k8sclustersync.v1.KubernetesServiceData.ServicePortR\\x05ports\\x12\\x12\\n\" +\n\t\"\\x04type\\x18\\x03 \\x01(\\tR\\x04type\\x12(\\n\" +\n\t\"\\rexternal_name\\x18\\x04 \\x01(\\tH\\x00R\\fexternalName\\x88\\x01\\x01\\x123\\n\" +\n\t\"\\x13load_balancer_class\\x18\\x05 \\x01(\\tH\\x01R\\x11loadBalancerClass\\x88\\x01\\x01\\x1a\\x9d\\x01\\n\" +\n\t\"\\vServicePort\\x12 \\n\" +\n\t\"\\tnode_port\\x18\\x01 \\x01(\\rH\\x00R\\bnodePort\\x88\\x01\\x01\\x12\\x12\\n\" +\n\t\"\\x04port\\x18\\x02 \\x01(\\rR\\x04port\\x12\\x1a\\n\" +\n\t\"\\bprotocol\\x18\\x03 \\x01(\\tR\\bprotocol\\x12.\\n\" +\n\t\"\\x13load_balancer_ports\\x18\\x04 \\x03(\\tR\\x11loadBalancerPortsB\\f\\n\" +\n\t\"\\n\" +\n\t\"_node_portB\\x10\\n\" +\n\t\"\\x0e_external_nameB\\x16\\n\" +\n\t\"\\x14_load_balancer_class\\\"X\\n\" +\n\t\"\\x12KubernetesNodeData\\x12\\x1f\\n\" +\n\t\"\\vprovider_id\\x18\\x01 \\x01(\\tR\\n\" +\n\t\"providerId\\x12!\\n\" +\n\t\"\\fip_addresses\\x18\\x02 \\x03(\\tR\\vipAddresses\\\"6\\n\" +\n\t\"\\x11KubernetesPodData\\x12!\\n\" +\n\t\"\\fip_addresses\\x18\\x01 \\x03(\\tR\\vipAddresses\\\"\\xc7\\x01\\n\" +\n\t\"\\x18KubernetesOwnerReference\\x12\\x1f\\n\" +\n\t\"\\vapi_version\\x18\\x01 \\x01(\\tR\\n\" +\n\t\"apiVersion\\x120\\n\" +\n\t\"\\x14block_owner_deletion\\x18\\x02 \\x01(\\bR\\x12blockOwnerDeletion\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"controller\\x18\\x03 \\x01(\\bR\\n\" +\n\t\"controller\\x12\\x12\\n\" +\n\t\"\\x04kind\\x18\\x04 \\x01(\\tR\\x04kind\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x05 \\x01(\\tR\\x04name\\x12\\x10\\n\" +\n\t\"\\x03uid\\x18\\x06 \\x01(\\tR\\x03uid\\\"\\xde\\x01\\n\" +\n\t\"\\x19KubernetesClusterMetadata\\x12\\x10\\n\" +\n\t\"\\x03uid\\x18\\x01 \\x01(\\tR\\x03uid\\x12-\\n\" +\n\t\"\\x12kubernetes_version\\x18\\x02 \\x01(\\tR\\x11kubernetesVersion\\x12)\\n\" +\n\t\"\\x10operator_version\\x18\\x03 \\x01(\\tR\\x0foperatorVersion\\x12U\\n\" +\n\t\"\\x0eflow_collector\\x18\\x04 \\x01(\\x0e2..illumio.cloud.k8sclustersync.v1.FlowCollectorR\\rflowCollector\\\"\\xc5\\x04\\n\" +\n\t\"\\x1eSendKubernetesResourcesRequest\\x12J\\n\" +\n\t\"\\tkeepalive\\x18\\x05 \\x01(\\v2*.illumio.cloud.k8sclustersync.v1.KeepaliveH\\x00R\\tkeepalive\\x12g\\n\" +\n\t\"\\x10cluster_metadata\\x18\\x01 \\x01(\\v2:.illumio.cloud.k8sclustersync.v1.KubernetesClusterMetadataH\\x00R\\x0fclusterMetadata\\x12\\\\\\n\" +\n\t\"\\rresource_data\\x18\\x02 \\x01(\\v25.illumio.cloud.k8sclustersync.v1.KubernetesObjectDataH\\x00R\\fresourceData\\x12\\x83\\x01\\n\" +\n\t\"\\x1aresource_snapshot_complete\\x18\\x03 \\x01(\\v2C.illumio.cloud.k8sclustersync.v1.KubernetesResourceSnapshotCompleteH\\x00R\\x18resourceSnapshotComplete\\x12\\x7f\\n\" +\n\t\"\\x1ckubernetes_resource_mutation\\x18\\x04 \\x01(\\v2;.illumio.cloud.k8sclustersync.v1.KubernetesResourceMutationH\\x00R\\x1akubernetesResourceMutationB\\t\\n\" +\n\t\"\\arequest\\\"$\\n\" +\n\t\"\\\"KubernetesResourceSnapshotComplete\\\"!\\n\" +\n\t\"\\x1fSendKubernetesResourcesResponse\\\"\\xce\\x02\\n\" +\n\t\"\\x1aKubernetesResourceMutation\\x12`\\n\" +\n\t\"\\x0fcreate_resource\\x18\\x01 \\x01(\\v25.illumio.cloud.k8sclustersync.v1.KubernetesObjectDataH\\x00R\\x0ecreateResource\\x12`\\n\" +\n\t\"\\x0fupdate_resource\\x18\\x02 \\x01(\\v25.illumio.cloud.k8sclustersync.v1.KubernetesObjectDataH\\x00R\\x0eupdateResource\\x12`\\n\" +\n\t\"\\x0fdelete_resource\\x18\\x03 \\x01(\\v25.illumio.cloud.k8sclustersync.v1.KubernetesObjectDataH\\x00R\\x0edeleteResourceB\\n\" +\n\t\"\\n\" +\n\t\"\\bmutation\\\"\\xe5\\x01\\n\" +\n\t\"\\tFalcoFlow\\x12;\\n\" +\n\t\"\\x06layer3\\x18\\x01 \\x01(\\v2#.illumio.cloud.k8sclustersync.v1.IPR\\x06layer3\\x12?\\n\" +\n\t\"\\x06layer4\\x18\\x02 \\x01(\\v2'.illumio.cloud.k8sclustersync.v1.Layer4R\\x06layer4\\x12\\x18\\n\" +\n\t\"\\x04time\\x18\\x03 \\x01(\\tB\\x02\\x18\\x01H\\x00R\\x04time\\x12:\\n\" +\n\t\"\\ttimestamp\\x18\\x04 \\x01(\\v2\\x1a.google.protobuf.TimestampH\\x00R\\ttimestampB\\x04\\n\" +\n\t\"\\x02ts\\\"\\xca\\b\\n\" +\n\t\"\\n\" +\n\t\"CiliumFlow\\x12.\\n\" +\n\t\"\\x04time\\x18\\x01 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\x04time\\x12\\x1b\\n\" +\n\t\"\\tnode_name\\x18\\x02 \\x01(\\tR\\bnodeName\\x12^\\n\" +\n\t\"\\x11traffic_direction\\x18\\x03 \\x01(\\x0e21.illumio.cloud.k8sclustersync.v1.TrafficDirectionR\\x10trafficDirection\\x12B\\n\" +\n\t\"\\averdict\\x18\\x04 \\x01(\\x0e2(.illumio.cloud.k8sclustersync.v1.VerdictR\\averdict\\x12;\\n\" +\n\t\"\\x06layer3\\x18\\x05 \\x01(\\v2#.illumio.cloud.k8sclustersync.v1.IPR\\x06layer3\\x12?\\n\" +\n\t\"\\x06layer4\\x18\\x06 \\x01(\\v2'.illumio.cloud.k8sclustersync.v1.Layer4R\\x06layer4\\x125\\n\" +\n\t\"\\bis_reply\\x18\\a \\x01(\\v2\\x1a.google.protobuf.BoolValueR\\aisReply\\x12W\\n\" +\n\t\"\\x0fsource_endpoint\\x18\\b \\x01(\\v2).illumio.cloud.k8sclustersync.v1.EndpointH\\x00R\\x0esourceEndpoint\\x88\\x01\\x01\\x12a\\n\" +\n\t\"\\x14destination_endpoint\\x18\\t \\x01(\\v2).illumio.cloud.k8sclustersync.v1.EndpointH\\x01R\\x13destinationEndpoint\\x88\\x01\\x01\\x12Y\\n\" +\n\t\"\\x13destination_service\\x18\\n\" +\n\t\" \\x01(\\v2(.illumio.cloud.k8sclustersync.v1.ServiceR\\x12destinationService\\x12S\\n\" +\n\t\"\\x11egress_allowed_by\\x18\\v \\x03(\\v2'.illumio.cloud.k8sclustersync.v1.PolicyR\\x0fegressAllowedBy\\x12U\\n\" +\n\t\"\\x12ingress_allowed_by\\x18\\f \\x03(\\v2'.illumio.cloud.k8sclustersync.v1.PolicyR\\x10ingressAllowedBy\\x12Q\\n\" +\n\t\"\\x10egress_denied_by\\x18\\r \\x03(\\v2'.illumio.cloud.k8sclustersync.v1.PolicyR\\x0eegressDeniedBy\\x12S\\n\" +\n\t\"\\x11ingress_denied_by\\x18\\x0e \\x03(\\v2'.illumio.cloud.k8sclustersync.v1.PolicyR\\x0fingressDeniedByB\\x12\\n\" +\n\t\"\\x10_source_endpointB\\x17\\n\" +\n\t\"\\x15_destination_endpoint\\\";\\n\" +\n\t\"\\aService\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x01 \\x01(\\tR\\x04name\\x12\\x1c\\n\" +\n\t\"\\tnamespace\\x18\\x02 \\x01(\\tR\\tnamespace\\\"\\x89\\x01\\n\" +\n\t\"\\x02IP\\x12\\x16\\n\" +\n\t\"\\x06source\\x18\\x01 \\x01(\\tR\\x06source\\x12 \\n\" +\n\t\"\\vdestination\\x18\\x02 \\x01(\\tR\\vdestination\\x12I\\n\" +\n\t\"\\n\" +\n\t\"ip_version\\x18\\x03 \\x01(\\x0e2*.illumio.cloud.k8sclustersync.v1.IPVersionR\\tipVersion\\\"\\xcb\\x02\\n\" +\n\t\"\\x06Layer4\\x128\\n\" +\n\t\"\\x03tcp\\x18\\x01 \\x01(\\v2$.illumio.cloud.k8sclustersync.v1.TCPH\\x00R\\x03tcp\\x128\\n\" +\n\t\"\\x03udp\\x18\\x02 \\x01(\\v2$.illumio.cloud.k8sclustersync.v1.UDPH\\x00R\\x03udp\\x12A\\n\" +\n\t\"\\x06icmpv4\\x18\\x03 \\x01(\\v2'.illumio.cloud.k8sclustersync.v1.ICMPv4H\\x00R\\x06icmpv4\\x12A\\n\" +\n\t\"\\x06icmpv6\\x18\\x04 \\x01(\\v2'.illumio.cloud.k8sclustersync.v1.ICMPv6H\\x00R\\x06icmpv6\\x12;\\n\" +\n\t\"\\x04sctp\\x18\\x05 \\x01(\\v2%.illumio.cloud.k8sclustersync.v1.SCTPH\\x00R\\x04sctpB\\n\" +\n\t\"\\n\" +\n\t\"\\bprotocol\\\"\\x92\\x01\\n\" +\n\t\"\\x03TCP\\x12\\x1f\\n\" +\n\t\"\\vsource_port\\x18\\x01 \\x01(\\rR\\n\" +\n\t\"sourcePort\\x12)\\n\" +\n\t\"\\x10destination_port\\x18\\x02 \\x01(\\rR\\x0fdestinationPort\\x12?\\n\" +\n\t\"\\x05flags\\x18\\x03 \\x01(\\v2).illumio.cloud.k8sclustersync.v1.TCPFlagsR\\x05flags\\\"\\xaa\\x01\\n\" +\n\t\"\\bTCPFlags\\x12\\x10\\n\" +\n\t\"\\x03fin\\x18\\x01 \\x01(\\bR\\x03fin\\x12\\x10\\n\" +\n\t\"\\x03syn\\x18\\x02 \\x01(\\bR\\x03syn\\x12\\x10\\n\" +\n\t\"\\x03rst\\x18\\x03 \\x01(\\bR\\x03rst\\x12\\x10\\n\" +\n\t\"\\x03psh\\x18\\x04 \\x01(\\bR\\x03psh\\x12\\x10\\n\" +\n\t\"\\x03ack\\x18\\x05 \\x01(\\bR\\x03ack\\x12\\x10\\n\" +\n\t\"\\x03urg\\x18\\x06 \\x01(\\bR\\x03urg\\x12\\x10\\n\" +\n\t\"\\x03ece\\x18\\a \\x01(\\bR\\x03ece\\x12\\x10\\n\" +\n\t\"\\x03cwr\\x18\\b \\x01(\\bR\\x03cwr\\x12\\x0e\\n\" +\n\t\"\\x02ns\\x18\\t \\x01(\\bR\\x02ns\\\"Q\\n\" +\n\t\"\\x03UDP\\x12\\x1f\\n\" +\n\t\"\\vsource_port\\x18\\x01 \\x01(\\rR\\n\" +\n\t\"sourcePort\\x12)\\n\" +\n\t\"\\x10destination_port\\x18\\x02 \\x01(\\rR\\x0fdestinationPort\\\"R\\n\" +\n\t\"\\x04SCTP\\x12\\x1f\\n\" +\n\t\"\\vsource_port\\x18\\x01 \\x01(\\rR\\n\" +\n\t\"sourcePort\\x12)\\n\" +\n\t\"\\x10destination_port\\x18\\x02 \\x01(\\rR\\x0fdestinationPort\\\"0\\n\" +\n\t\"\\x06ICMPv4\\x12\\x12\\n\" +\n\t\"\\x04type\\x18\\x01 \\x01(\\rR\\x04type\\x12\\x12\\n\" +\n\t\"\\x04code\\x18\\x02 \\x01(\\rR\\x04code\\\"0\\n\" +\n\t\"\\x06ICMPv6\\x12\\x12\\n\" +\n\t\"\\x04type\\x18\\x01 \\x01(\\rR\\x04type\\x12\\x12\\n\" +\n\t\"\\x04code\\x18\\x02 \\x01(\\rR\\x04code\\\"\\xd9\\x01\\n\" +\n\t\"\\bEndpoint\\x12\\x10\\n\" +\n\t\"\\x03uid\\x18\\x01 \\x01(\\rR\\x03uid\\x12!\\n\" +\n\t\"\\fcluster_name\\x18\\a \\x01(\\tR\\vclusterName\\x12\\x1c\\n\" +\n\t\"\\tnamespace\\x18\\x03 \\x01(\\tR\\tnamespace\\x12\\x16\\n\" +\n\t\"\\x06labels\\x18\\x04 \\x03(\\tR\\x06labels\\x12\\x19\\n\" +\n\t\"\\bpod_name\\x18\\x05 \\x01(\\tR\\apodName\\x12G\\n\" +\n\t\"\\tworkloads\\x18\\x06 \\x03(\\v2).illumio.cloud.k8sclustersync.v1.WorkloadR\\tworkloads\\\"2\\n\" +\n\t\"\\bWorkload\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x01 \\x01(\\tR\\x04name\\x12\\x12\\n\" +\n\t\"\\x04kind\\x18\\x02 \\x01(\\tR\\x04kind\\\"n\\n\" +\n\t\"\\x06Policy\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x01 \\x01(\\tR\\x04name\\x12\\x1c\\n\" +\n\t\"\\tnamespace\\x18\\x02 \\x01(\\tR\\tnamespace\\x12\\x16\\n\" +\n\t\"\\x06labels\\x18\\x03 \\x03(\\tR\\x06labels\\x12\\x1a\\n\" +\n\t\"\\brevision\\x18\\x04 \\x01(\\x04R\\brevision\\\"\\x97\\x02\\n\" +\n\t\"!SendKubernetesNetworkFlowsRequest\\x12J\\n\" +\n\t\"\\tkeepalive\\x18\\x03 \\x01(\\v2*.illumio.cloud.k8sclustersync.v1.KeepaliveH\\x00R\\tkeepalive\\x12N\\n\" +\n\t\"\\vcilium_flow\\x18\\x01 \\x01(\\v2+.illumio.cloud.k8sclustersync.v1.CiliumFlowH\\x00R\\n\" +\n\t\"ciliumFlow\\x12K\\n\" +\n\t\"\\n\" +\n\t\"falco_flow\\x18\\x02 \\x01(\\v2*.illumio.cloud.k8sclustersync.v1.FalcoFlowH\\x00R\\tfalcoFlowB\\t\\n\" +\n\t\"\\arequest\\\"$\\n\" +\n\t\"\\\"SendKubernetesNetworkFlowsResponse\\\"-\\n\" +\n\t\"\\bLogEntry\\x12!\\n\" +\n\t\"\\fjson_message\\x18\\x03 \\x01(\\tR\\vjsonMessage\\\"\\xb2\\x01\\n\" +\n\t\"\\x0fSendLogsRequest\\x12J\\n\" +\n\t\"\\tkeepalive\\x18\\x02 \\x01(\\v2*.illumio.cloud.k8sclustersync.v1.KeepaliveH\\x00R\\tkeepalive\\x12H\\n\" +\n\t\"\\tlog_entry\\x18\\x01 \\x01(\\v2).illumio.cloud.k8sclustersync.v1.LogEntryH\\x00R\\blogEntryB\\t\\n\" +\n\t\"\\arequest\\\"\\x12\\n\" +\n\t\"\\x10SendLogsResponse\\\"w\\n\" +\n\t\"\\x1eGetConfigurationUpdatesRequest\\x12J\\n\" +\n\t\"\\tkeepalive\\x18\\x01 \\x01(\\v2*.illumio.cloud.k8sclustersync.v1.KeepaliveH\\x00R\\tkeepaliveB\\t\\n\" +\n\t\"\\arequest\\\"\\x8c\\x02\\n\" +\n\t\"\\x1fGetConfigurationUpdatesResponse\\x12\\x83\\x01\\n\" +\n\t\"\\x14update_configuration\\x18\\x01 \\x01(\\v2N.illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesResponse.ConfigurationH\\x00R\\x13updateConfiguration\\x1aW\\n\" +\n\t\"\\rConfiguration\\x12F\\n\" +\n\t\"\\tlog_level\\x18\\x01 \\x01(\\x0e2).illumio.cloud.k8sclustersync.v1.LogLevelR\\blogLevelB\\n\" +\n\t\"\\n\" +\n\t\"\\bresponse*\\x81\\x01\\n\" +\n\t\"\\rFlowCollector\\x12\\x1e\\n\" +\n\t\"\\x1aFLOW_COLLECTOR_UNSPECIFIED\\x10\\x00\\x12\\x1b\\n\" +\n\t\"\\x17FLOW_COLLECTOR_DISABLED\\x10\\x01\\x12\\x19\\n\" +\n\t\"\\x15FLOW_COLLECTOR_CILIUM\\x10\\x02\\x12\\x18\\n\" +\n\t\"\\x14FLOW_COLLECTOR_FALCO\\x10\\x03*\\x8c\\x01\\n\" +\n\t\"\\x10TrafficDirection\\x12;\\n\" +\n\t\"7TRAFFIC_DIRECTION_TRAFFIC_DIRECTION_UNKNOWN_UNSPECIFIED\\x10\\x00\\x12\\x1d\\n\" +\n\t\"\\x19TRAFFIC_DIRECTION_INGRESS\\x10\\x01\\x12\\x1c\\n\" +\n\t\"\\x18TRAFFIC_DIRECTION_EGRESS\\x10\\x02*\\xc0\\x01\\n\" +\n\t\"\\aVerdict\\x12\\x1f\\n\" +\n\t\"\\x1bVERDICT_UNKNOWN_UNSPECIFIED\\x10\\x00\\x12\\x15\\n\" +\n\t\"\\x11VERDICT_FORWARDED\\x10\\x01\\x12\\x13\\n\" +\n\t\"\\x0fVERDICT_DROPPED\\x10\\x02\\x12\\x11\\n\" +\n\t\"\\rVERDICT_ERROR\\x10\\x03\\x12\\x11\\n\" +\n\t\"\\rVERDICT_AUDIT\\x10\\x04\\x12\\x16\\n\" +\n\t\"\\x12VERDICT_REDIRECTED\\x10\\x05\\x12\\x12\\n\" +\n\t\"\\x0eVERDICT_TRACED\\x10\\x06\\x12\\x16\\n\" +\n\t\"\\x12VERDICT_TRANSLATED\\x10\\a*]\\n\" +\n\t\"\\tIPVersion\\x12&\\n\" +\n\t\"\\\"IP_VERSION_IP_NOT_USED_UNSPECIFIED\\x10\\x00\\x12\\x13\\n\" +\n\t\"\\x0fIP_VERSION_IPV4\\x10\\x01\\x12\\x13\\n\" +\n\t\"\\x0fIP_VERSION_IPV6\\x10\\x02*w\\n\" +\n\t\"\\bLogLevel\\x12\\x19\\n\" +\n\t\"\\x15LOG_LEVEL_UNSPECIFIED\\x10\\x00\\x12\\x13\\n\" +\n\t\"\\x0fLOG_LEVEL_DEBUG\\x10\\x01\\x12\\x12\\n\" +\n\t\"\\x0eLOG_LEVEL_INFO\\x10\\x02\\x12\\x12\\n\" +\n\t\"\\x0eLOG_LEVEL_WARN\\x10\\x03\\x12\\x13\\n\" +\n\t\"\\x0fLOG_LEVEL_ERROR\\x10\\x042\\xfe\\x04\\n\" +\n\t\"\\x15KubernetesInfoService\\x12\\xa0\\x01\\n\" +\n\t\"\\x17SendKubernetesResources\\x12?.illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesRequest\\x1a@.illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesResponse(\\x010\\x01\\x12\\xa9\\x01\\n\" +\n\t\"\\x1aSendKubernetesNetworkFlows\\x12B.illumio.cloud.k8sclustersync.v1.SendKubernetesNetworkFlowsRequest\\x1aC.illumio.cloud.k8sclustersync.v1.SendKubernetesNetworkFlowsResponse(\\x010\\x01\\x12s\\n\" +\n\t\"\\bSendLogs\\x120.illumio.cloud.k8sclustersync.v1.SendLogsRequest\\x1a1.illumio.cloud.k8sclustersync.v1.SendLogsResponse(\\x010\\x01\\x12\\xa0\\x01\\n\" +\n\t\"\\x17GetConfigurationUpdates\\x12?.illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesRequest\\x1a@.illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesResponse(\\x010\\x01B\\xac\\x02\\n\" +\n\t\"#com.illumio.cloud.k8sclustersync.v1B\\fK8sInfoProtoP\\x01ZXgithub.com/illumio/cloudsecure-operator/illumio/cloud/k8sclustersync/v1;k8sclustersyncv1\\xa2\\x02\\x03ICK\\xaa\\x02\\x1fIllumio.Cloud.K8sclustersync.V1\\xca\\x02\\x1fIllumio\\\\Cloud\\\\K8sclustersync\\\\V1\\xe2\\x02+Illumio\\\\Cloud\\\\K8sclustersync\\\\V1\\\\GPBMetadata\\xea\\x02\\\"Illumio::Cloud::K8sclustersync::V1b\\x06proto3\"\n\nvar (\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescOnce sync.Once\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescData []byte\n)\n\nfunc file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescGZIP() []byte {\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescOnce.Do(func() {\n\t\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDesc), len(file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDesc)))\n\t})\n\treturn file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDescData\n}\n\nvar file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes = make([]protoimpl.EnumInfo, 5)\nvar file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes = make([]protoimpl.MessageInfo, 36)\nvar file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_goTypes = []any{\n\t(FlowCollector)(0),                         // 0: illumio.cloud.k8sclustersync.v1.FlowCollector\n\t(TrafficDirection)(0),                      // 1: illumio.cloud.k8sclustersync.v1.TrafficDirection\n\t(Verdict)(0),                               // 2: illumio.cloud.k8sclustersync.v1.Verdict\n\t(IPVersion)(0),                             // 3: illumio.cloud.k8sclustersync.v1.IPVersion\n\t(LogLevel)(0),                              // 4: illumio.cloud.k8sclustersync.v1.LogLevel\n\t(*Keepalive)(nil),                          // 5: illumio.cloud.k8sclustersync.v1.Keepalive\n\t(*KubernetesObjectData)(nil),               // 6: illumio.cloud.k8sclustersync.v1.KubernetesObjectData\n\t(*KubernetesServiceData)(nil),              // 7: illumio.cloud.k8sclustersync.v1.KubernetesServiceData\n\t(*KubernetesNodeData)(nil),                 // 8: illumio.cloud.k8sclustersync.v1.KubernetesNodeData\n\t(*KubernetesPodData)(nil),                  // 9: illumio.cloud.k8sclustersync.v1.KubernetesPodData\n\t(*KubernetesOwnerReference)(nil),           // 10: illumio.cloud.k8sclustersync.v1.KubernetesOwnerReference\n\t(*KubernetesClusterMetadata)(nil),          // 11: illumio.cloud.k8sclustersync.v1.KubernetesClusterMetadata\n\t(*SendKubernetesResourcesRequest)(nil),     // 12: illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesRequest\n\t(*KubernetesResourceSnapshotComplete)(nil), // 13: illumio.cloud.k8sclustersync.v1.KubernetesResourceSnapshotComplete\n\t(*SendKubernetesResourcesResponse)(nil),    // 14: illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesResponse\n\t(*KubernetesResourceMutation)(nil),         // 15: illumio.cloud.k8sclustersync.v1.KubernetesResourceMutation\n\t(*FalcoFlow)(nil),                          // 16: illumio.cloud.k8sclustersync.v1.FalcoFlow\n\t(*CiliumFlow)(nil),                         // 17: illumio.cloud.k8sclustersync.v1.CiliumFlow\n\t(*Service)(nil),                            // 18: illumio.cloud.k8sclustersync.v1.Service\n\t(*IP)(nil),                                 // 19: illumio.cloud.k8sclustersync.v1.IP\n\t(*Layer4)(nil),                             // 20: illumio.cloud.k8sclustersync.v1.Layer4\n\t(*TCP)(nil),                                // 21: illumio.cloud.k8sclustersync.v1.TCP\n\t(*TCPFlags)(nil),                           // 22: illumio.cloud.k8sclustersync.v1.TCPFlags\n\t(*UDP)(nil),                                // 23: illumio.cloud.k8sclustersync.v1.UDP\n\t(*SCTP)(nil),                               // 24: illumio.cloud.k8sclustersync.v1.SCTP\n\t(*ICMPv4)(nil),                             // 25: illumio.cloud.k8sclustersync.v1.ICMPv4\n\t(*ICMPv6)(nil),                             // 26: illumio.cloud.k8sclustersync.v1.ICMPv6\n\t(*Endpoint)(nil),                           // 27: illumio.cloud.k8sclustersync.v1.Endpoint\n\t(*Workload)(nil),                           // 28: illumio.cloud.k8sclustersync.v1.Workload\n\t(*Policy)(nil),                             // 29: illumio.cloud.k8sclustersync.v1.Policy\n\t(*SendKubernetesNetworkFlowsRequest)(nil),  // 30: illumio.cloud.k8sclustersync.v1.SendKubernetesNetworkFlowsRequest\n\t(*SendKubernetesNetworkFlowsResponse)(nil), // 31: illumio.cloud.k8sclustersync.v1.SendKubernetesNetworkFlowsResponse\n\t(*LogEntry)(nil),                           // 32: illumio.cloud.k8sclustersync.v1.LogEntry\n\t(*SendLogsRequest)(nil),                    // 33: illumio.cloud.k8sclustersync.v1.SendLogsRequest\n\t(*SendLogsResponse)(nil),                   // 34: illumio.cloud.k8sclustersync.v1.SendLogsResponse\n\t(*GetConfigurationUpdatesRequest)(nil),     // 35: illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesRequest\n\t(*GetConfigurationUpdatesResponse)(nil),    // 36: illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesResponse\n\tnil,                                        // 37: illumio.cloud.k8sclustersync.v1.KubernetesObjectData.AnnotationsEntry\n\tnil,                                        // 38: illumio.cloud.k8sclustersync.v1.KubernetesObjectData.LabelsEntry\n\t(*KubernetesServiceData_ServicePort)(nil),  // 39: illumio.cloud.k8sclustersync.v1.KubernetesServiceData.ServicePort\n\t(*GetConfigurationUpdatesResponse_Configuration)(nil), // 40: illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesResponse.Configuration\n\t(*timestamppb.Timestamp)(nil),                         // 41: google.protobuf.Timestamp\n\t(*wrapperspb.BoolValue)(nil),                          // 42: google.protobuf.BoolValue\n}\nvar file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_depIdxs = []int32{\n\t37, // 0: illumio.cloud.k8sclustersync.v1.KubernetesObjectData.annotations:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesObjectData.AnnotationsEntry\n\t41, // 1: illumio.cloud.k8sclustersync.v1.KubernetesObjectData.creation_timestamp:type_name -> google.protobuf.Timestamp\n\t38, // 2: illumio.cloud.k8sclustersync.v1.KubernetesObjectData.labels:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesObjectData.LabelsEntry\n\t10, // 3: illumio.cloud.k8sclustersync.v1.KubernetesObjectData.owner_references:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesOwnerReference\n\t9,  // 4: illumio.cloud.k8sclustersync.v1.KubernetesObjectData.pod:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesPodData\n\t8,  // 5: illumio.cloud.k8sclustersync.v1.KubernetesObjectData.node:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesNodeData\n\t7,  // 6: illumio.cloud.k8sclustersync.v1.KubernetesObjectData.service:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesServiceData\n\t39, // 7: illumio.cloud.k8sclustersync.v1.KubernetesServiceData.ports:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesServiceData.ServicePort\n\t0,  // 8: illumio.cloud.k8sclustersync.v1.KubernetesClusterMetadata.flow_collector:type_name -> illumio.cloud.k8sclustersync.v1.FlowCollector\n\t5,  // 9: illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesRequest.keepalive:type_name -> illumio.cloud.k8sclustersync.v1.Keepalive\n\t11, // 10: illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesRequest.cluster_metadata:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesClusterMetadata\n\t6,  // 11: illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesRequest.resource_data:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesObjectData\n\t13, // 12: illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesRequest.resource_snapshot_complete:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesResourceSnapshotComplete\n\t15, // 13: illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesRequest.kubernetes_resource_mutation:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesResourceMutation\n\t6,  // 14: illumio.cloud.k8sclustersync.v1.KubernetesResourceMutation.create_resource:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesObjectData\n\t6,  // 15: illumio.cloud.k8sclustersync.v1.KubernetesResourceMutation.update_resource:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesObjectData\n\t6,  // 16: illumio.cloud.k8sclustersync.v1.KubernetesResourceMutation.delete_resource:type_name -> illumio.cloud.k8sclustersync.v1.KubernetesObjectData\n\t19, // 17: illumio.cloud.k8sclustersync.v1.FalcoFlow.layer3:type_name -> illumio.cloud.k8sclustersync.v1.IP\n\t20, // 18: illumio.cloud.k8sclustersync.v1.FalcoFlow.layer4:type_name -> illumio.cloud.k8sclustersync.v1.Layer4\n\t41, // 19: illumio.cloud.k8sclustersync.v1.FalcoFlow.timestamp:type_name -> google.protobuf.Timestamp\n\t41, // 20: illumio.cloud.k8sclustersync.v1.CiliumFlow.time:type_name -> google.protobuf.Timestamp\n\t1,  // 21: illumio.cloud.k8sclustersync.v1.CiliumFlow.traffic_direction:type_name -> illumio.cloud.k8sclustersync.v1.TrafficDirection\n\t2,  // 22: illumio.cloud.k8sclustersync.v1.CiliumFlow.verdict:type_name -> illumio.cloud.k8sclustersync.v1.Verdict\n\t19, // 23: illumio.cloud.k8sclustersync.v1.CiliumFlow.layer3:type_name -> illumio.cloud.k8sclustersync.v1.IP\n\t20, // 24: illumio.cloud.k8sclustersync.v1.CiliumFlow.layer4:type_name -> illumio.cloud.k8sclustersync.v1.Layer4\n\t42, // 25: illumio.cloud.k8sclustersync.v1.CiliumFlow.is_reply:type_name -> google.protobuf.BoolValue\n\t27, // 26: illumio.cloud.k8sclustersync.v1.CiliumFlow.source_endpoint:type_name -> illumio.cloud.k8sclustersync.v1.Endpoint\n\t27, // 27: illumio.cloud.k8sclustersync.v1.CiliumFlow.destination_endpoint:type_name -> illumio.cloud.k8sclustersync.v1.Endpoint\n\t18, // 28: illumio.cloud.k8sclustersync.v1.CiliumFlow.destination_service:type_name -> illumio.cloud.k8sclustersync.v1.Service\n\t29, // 29: illumio.cloud.k8sclustersync.v1.CiliumFlow.egress_allowed_by:type_name -> illumio.cloud.k8sclustersync.v1.Policy\n\t29, // 30: illumio.cloud.k8sclustersync.v1.CiliumFlow.ingress_allowed_by:type_name -> illumio.cloud.k8sclustersync.v1.Policy\n\t29, // 31: illumio.cloud.k8sclustersync.v1.CiliumFlow.egress_denied_by:type_name -> illumio.cloud.k8sclustersync.v1.Policy\n\t29, // 32: illumio.cloud.k8sclustersync.v1.CiliumFlow.ingress_denied_by:type_name -> illumio.cloud.k8sclustersync.v1.Policy\n\t3,  // 33: illumio.cloud.k8sclustersync.v1.IP.ip_version:type_name -> illumio.cloud.k8sclustersync.v1.IPVersion\n\t21, // 34: illumio.cloud.k8sclustersync.v1.Layer4.tcp:type_name -> illumio.cloud.k8sclustersync.v1.TCP\n\t23, // 35: illumio.cloud.k8sclustersync.v1.Layer4.udp:type_name -> illumio.cloud.k8sclustersync.v1.UDP\n\t25, // 36: illumio.cloud.k8sclustersync.v1.Layer4.icmpv4:type_name -> illumio.cloud.k8sclustersync.v1.ICMPv4\n\t26, // 37: illumio.cloud.k8sclustersync.v1.Layer4.icmpv6:type_name -> illumio.cloud.k8sclustersync.v1.ICMPv6\n\t24, // 38: illumio.cloud.k8sclustersync.v1.Layer4.sctp:type_name -> illumio.cloud.k8sclustersync.v1.SCTP\n\t22, // 39: illumio.cloud.k8sclustersync.v1.TCP.flags:type_name -> illumio.cloud.k8sclustersync.v1.TCPFlags\n\t28, // 40: illumio.cloud.k8sclustersync.v1.Endpoint.workloads:type_name -> illumio.cloud.k8sclustersync.v1.Workload\n\t5,  // 41: illumio.cloud.k8sclustersync.v1.SendKubernetesNetworkFlowsRequest.keepalive:type_name -> illumio.cloud.k8sclustersync.v1.Keepalive\n\t17, // 42: illumio.cloud.k8sclustersync.v1.SendKubernetesNetworkFlowsRequest.cilium_flow:type_name -> illumio.cloud.k8sclustersync.v1.CiliumFlow\n\t16, // 43: illumio.cloud.k8sclustersync.v1.SendKubernetesNetworkFlowsRequest.falco_flow:type_name -> illumio.cloud.k8sclustersync.v1.FalcoFlow\n\t5,  // 44: illumio.cloud.k8sclustersync.v1.SendLogsRequest.keepalive:type_name -> illumio.cloud.k8sclustersync.v1.Keepalive\n\t32, // 45: illumio.cloud.k8sclustersync.v1.SendLogsRequest.log_entry:type_name -> illumio.cloud.k8sclustersync.v1.LogEntry\n\t5,  // 46: illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesRequest.keepalive:type_name -> illumio.cloud.k8sclustersync.v1.Keepalive\n\t40, // 47: illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesResponse.update_configuration:type_name -> illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesResponse.Configuration\n\t4,  // 48: illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesResponse.Configuration.log_level:type_name -> illumio.cloud.k8sclustersync.v1.LogLevel\n\t12, // 49: illumio.cloud.k8sclustersync.v1.KubernetesInfoService.SendKubernetesResources:input_type -> illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesRequest\n\t30, // 50: illumio.cloud.k8sclustersync.v1.KubernetesInfoService.SendKubernetesNetworkFlows:input_type -> illumio.cloud.k8sclustersync.v1.SendKubernetesNetworkFlowsRequest\n\t33, // 51: illumio.cloud.k8sclustersync.v1.KubernetesInfoService.SendLogs:input_type -> illumio.cloud.k8sclustersync.v1.SendLogsRequest\n\t35, // 52: illumio.cloud.k8sclustersync.v1.KubernetesInfoService.GetConfigurationUpdates:input_type -> illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesRequest\n\t14, // 53: illumio.cloud.k8sclustersync.v1.KubernetesInfoService.SendKubernetesResources:output_type -> illumio.cloud.k8sclustersync.v1.SendKubernetesResourcesResponse\n\t31, // 54: illumio.cloud.k8sclustersync.v1.KubernetesInfoService.SendKubernetesNetworkFlows:output_type -> illumio.cloud.k8sclustersync.v1.SendKubernetesNetworkFlowsResponse\n\t34, // 55: illumio.cloud.k8sclustersync.v1.KubernetesInfoService.SendLogs:output_type -> illumio.cloud.k8sclustersync.v1.SendLogsResponse\n\t36, // 56: illumio.cloud.k8sclustersync.v1.KubernetesInfoService.GetConfigurationUpdates:output_type -> illumio.cloud.k8sclustersync.v1.GetConfigurationUpdatesResponse\n\t53, // [53:57] is the sub-list for method output_type\n\t49, // [49:53] is the sub-list for method input_type\n\t49, // [49:49] is the sub-list for extension type_name\n\t49, // [49:49] is the sub-list for extension extendee\n\t0,  // [0:49] is the sub-list for field type_name\n}\n\nfunc init() { file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_init() }\nfunc file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_init() {\n\tif File_illumio_cloud_k8sclustersync_v1_k8s_info_proto != nil {\n\t\treturn\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[1].OneofWrappers = []any{\n\t\t(*KubernetesObjectData_Pod)(nil),\n\t\t(*KubernetesObjectData_Node)(nil),\n\t\t(*KubernetesObjectData_Service)(nil),\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[2].OneofWrappers = []any{}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[7].OneofWrappers = []any{\n\t\t(*SendKubernetesResourcesRequest_Keepalive)(nil),\n\t\t(*SendKubernetesResourcesRequest_ClusterMetadata)(nil),\n\t\t(*SendKubernetesResourcesRequest_ResourceData)(nil),\n\t\t(*SendKubernetesResourcesRequest_ResourceSnapshotComplete)(nil),\n\t\t(*SendKubernetesResourcesRequest_KubernetesResourceMutation)(nil),\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[10].OneofWrappers = []any{\n\t\t(*KubernetesResourceMutation_CreateResource)(nil),\n\t\t(*KubernetesResourceMutation_UpdateResource)(nil),\n\t\t(*KubernetesResourceMutation_DeleteResource)(nil),\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[11].OneofWrappers = []any{\n\t\t(*FalcoFlow_Time)(nil),\n\t\t(*FalcoFlow_Timestamp)(nil),\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[12].OneofWrappers = []any{}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[15].OneofWrappers = []any{\n\t\t(*Layer4_Tcp)(nil),\n\t\t(*Layer4_Udp)(nil),\n\t\t(*Layer4_Icmpv4)(nil),\n\t\t(*Layer4_Icmpv6)(nil),\n\t\t(*Layer4_Sctp)(nil),\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[25].OneofWrappers = []any{\n\t\t(*SendKubernetesNetworkFlowsRequest_Keepalive)(nil),\n\t\t(*SendKubernetesNetworkFlowsRequest_CiliumFlow)(nil),\n\t\t(*SendKubernetesNetworkFlowsRequest_FalcoFlow)(nil),\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[28].OneofWrappers = []any{\n\t\t(*SendLogsRequest_Keepalive)(nil),\n\t\t(*SendLogsRequest_LogEntry)(nil),\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[30].OneofWrappers = []any{\n\t\t(*GetConfigurationUpdatesRequest_Keepalive)(nil),\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[31].OneofWrappers = []any{\n\t\t(*GetConfigurationUpdatesResponse_UpdateConfiguration)(nil),\n\t}\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes[34].OneofWrappers = []any{}\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: unsafe.Slice(unsafe.StringData(file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDesc), len(file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_rawDesc)),\n\t\t\tNumEnums:      5,\n\t\t\tNumMessages:   36,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   1,\n\t\t},\n\t\tGoTypes:           file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_goTypes,\n\t\tDependencyIndexes: file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_depIdxs,\n\t\tEnumInfos:         file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_enumTypes,\n\t\tMessageInfos:      file_illumio_cloud_k8sclustersync_v1_k8s_info_proto_msgTypes,\n\t}.Build()\n\tFile_illumio_cloud_k8sclustersync_v1_k8s_info_proto = out.File\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_goTypes = nil\n\tfile_illumio_cloud_k8sclustersync_v1_k8s_info_proto_depIdxs = nil\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/illumio/cloud/k8sclustersync/v1/k8s_info.pb.go b/api/illumio/cloud/k8sclustersync/v1/k8s_info.pb.go
--- a/api/illumio/cloud/k8sclustersync/v1/k8s_info.pb.go	(revision 8c3ec794d476f91d7daa22466b2022c299d46eb7)
+++ b/api/illumio/cloud/k8sclustersync/v1/k8s_info.pb.go	(date 1745255525935)
@@ -9,13 +9,14 @@
 package k8sclustersyncv1
 
 import (
+	reflect "reflect"
+	sync "sync"
+	unsafe "unsafe"
+
 	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
 	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
 	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
 	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
-	reflect "reflect"
-	sync "sync"
-	unsafe "unsafe"
 )
 
 const (
