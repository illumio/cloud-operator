name: Build, Deploy and Onboard Cloud Operator 

on:
    push:
      branches:
        - integration-end-to-end-onboarding-operator
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          build-args: |
            VERSION=${{ github.ref_name }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}

      - name: Set up Kind cluster
        uses: helm/kind-action@v1.2.0
        with:
            version: v0.11.1  # Specify the version you need

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
            version: "v3.5.2" # Specify the version you need

      - name: Package Helm chart
        run: |
            helm package ./cloud-operator -d .\
      
      - name: Run Fakeserver Test Driver
        run: |
          go run _______

      - name: Install Helm chart and Deploy Operator
        env:
            ONBOARDING_CLIENT_ID: "client_id_1"
            ONBOARDING_CLIENT_SECRET: "client_id_2"
            TLS_SKIP_VERIFY: true
            ONBOARDING_ENDPOINT: "https://192.168.65.254:50053/api/v1/k8s_cluster/onboard"
            TOKEN_ENDPOINT: "https://192.168.65.254:50053/api/v1/k8s_cluster/authenticate"
            
        run: |
            helm upgrade --install illumio cloud-operator-*.tgz \
            --namespace illumio-cloud \
            --create-namespace \
            --set image.repository=ghcr.io/${{ github.repository }} \
            --set image.tag=${{ github.ref_name }} \
            --set image.pullPolicy=Always
            --set onboardingSecret.clientId=$ONBOARDING_CLIENT_ID \
            --set onboardingSecret.clientSecret=$ONBOARDING_CLIENT_SECRET \
            --set env.onboardingEndpoint=$ONBOARDING_ENDPOINT \
            --set env.tokenEndpoint=$TOKEN_ENDPOINT \
            --set env.tlsSkipVerify=$TLS_SKIP_VERIFY
        

