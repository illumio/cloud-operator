name: Test CycloneDX SBOM Generation

on:
  push:
    tags:
      # Temporarily trigger this workflow only on test* tags instead of v*, for testing
      - "test*"

permissions:
  attestations: write
  # Required to generate OIDC tokens for `sigstore/cosign-installer` authentication
  id-token: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.9.2

      - name: Check Cosign install
        run: cosign version

      - name: Install CycloneDX SBOM tools
        run: |
          go install github.com/anchore/syft/cmd/syft@v1.31.0
          go install github.com/CycloneDX/sbom-utility@v0.18.1

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ github.ref_name }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}

      - name: Generate SBOM
        id: generate-sbom
        run: |
          SYFT_GOLANG_SEARCH_REMOTE_LICENSES=true SYFT_FILE_METADATA_SELECTION=owned-by-package syft scan registry:ghcr.io/${{ github.repository }}:${{ github.ref_name }} --scope squashed --exclude '/usr/share/zoneinfo' --exclude '/usr/share/common-licenses' --exclude '/usr/share/base-files' -o cyclonedx-json | json_pp > sbom.cyclonedx.json

          # Fix the license for Debian's base-files package:
          sed -e 's/"name : "GPL"/"id" : "GPL-2.0-or-later"/' -i sbom.cyclonedx.json

          # Generate a human-readable Markdown version of the SBOM
          cat >sbom.md <<EOF
          # Illumio CloudSecure Cloud Operator SBOM

          Version: ${{ github.ref_name }}

          | Name | Version | Publisher | License(s) |
          |---|---|---|---|
          EOF
          jq -r '[.components[] | select(.licenses != null) | {name:.name,version:.version,publisher:(.publisher // ""),licenses:([.licenses[] | .license.id,.license.name | values | select(test("sha256:") | not)] | unique | join(", "))}] | unique | .[] | ("| " + .name + " | " + .version + " | " + .publisher + " | " + .licenses + " |")' <sbom.cyclonedx.json >>sbom.md

      - name: Sign the images with GitHub OIDC Token
        run: cosign sign --yes ghcr.io/${{ github.repository }}:${{ github.ref_name }}

      - name: Attest CycloneDX SBOM to Docker image
        uses: actions/attest-sbom@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          sbom-path: "sbom.cyclonedx.json"
          push-to-registry: true

      - name: Upload CycloneDX SBOM as release asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "./sbom.cyclonedx.json"
          asset_name: cloud-operator-sbom-${{ github.ref_name }}.cyclonedx.json
          asset_content_type: application/json

      - name: Upload Markdown SBOM as release asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "./sbom.md"
          asset_name: cloud-operator-sbom-${{ github.ref_name }}.md
          asset_content_type: text/markdown
