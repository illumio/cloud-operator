{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "defaultNamespace": {
      "type": "string",
      "description": "Default namespace for the operator"
    },
    "replicaCount": {
      "type": "integer",
      "minimum": 1,
      "description": "Number of replicas for the operator deployment"
    },
    "priorityClassName": {
      "type": "string",
      "description": "Priority class name for the operator pods"
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Docker image repository"
        },
        "tag": {
          "type": "string",
          "description": "Docker image tag"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"],
          "description": "Docker image pull policy"
        }
      },
      "required": ["repository", "tag", "pullPolicy"]
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Whether to create a service account"
        },
        "name": {
          "type": "string",
          "description": "Name of the service account"
        },
        "annotations": {
          "type": "object",
          "description": "Annotations for the service account"
        },
        "automount": {
          "type": "boolean",
          "description": "Whether to automount the service account token"
        }
      },
      "required": ["create", "name"]
    },
    "resources": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "description": "CPU limit"
            },
            "memory": {
              "type": "string",
              "description": "Memory limit"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "description": "CPU request"
            },
            "memory": {
              "type": "string",
              "description": "Memory request"
            }
          }
        }
      }
    },
    "clusterCredsSecret": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client ID for cluster credentials"
        },
        "clientSecret": {
          "type": "string",
          "description": "Client secret for cluster credentials"
        },
        "disableSecretCreation": {
          "type": "boolean",
          "description": "Whether to disable secret creation"
        },
        "forceSecretCreation": {
          "type": "boolean",
          "description": "Whether to force secret creation"
        }
      }
    },
    "onboardingSecret": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client ID for onboarding"
        },
        "clientSecret": {
          "type": "string",
          "description": "Client secret for onboarding"
        }
      }
    },
    "falco": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable Falco installation"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace for Falco installation"
        },
        "falco": {
          "type": "object",
          "description": "Falco configuration"
        },
        "customRules": {
          "type": "object",
          "description": "Custom rules for Falco"
        }
      },
      "required": ["enabled"]
    },
    "env": {
      "type": "object",
      "properties": {
        "tlsSkipVerify": {
          "type": "boolean",
          "description": "Whether to skip TLS verification"
        },
        "onboardingEndpoint": {
          "type": "string",
          "description": "Endpoint for onboarding"
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "Endpoint for token retrieval"
        },
        "streamKeepalivePeriods": {
          "type": "object",
          "description": "Periods for stream keepalive"
        },
        "streamSuccessPeriods": {
          "type": "object",
          "description": "Periods for stream success"
        }
      }
    }
  }
}